{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentification/authentification-routing.module.ts","./src/app/authentification/authentification.module.ts","./src/app/authentification/components/login/login.component.ts","./src/app/authentification/components/login/login.component.html","./src/app/authentification/services/auth-gaurd.service.ts","./src/app/authentification/services/authentification.service.ts","./src/app/authentification/services/basic-auth-htpp-interceptor.service.ts","./src/app/category/category-routing.module.ts","./src/app/category/category.module.ts","./src/app/category/components/category-form/category-form.component.ts","./src/app/category/components/category-form/category-form.component.html","./src/app/category/components/category-item/category-item.component.ts","./src/app/category/components/category-item/category-item.component.html","./src/app/category/components/category-list/category-list.component.ts","./src/app/category/components/category-list/category-list.component.html","./src/app/category/model/category.ts","./src/app/category/service/category.service.ts","./src/app/mouvement/components/mouvement-form/mouvement-form.component.ts","./src/app/mouvement/components/mouvement-form/mouvement-form.component.html","./src/app/mouvement/components/mouvement-list/mouvement-list.component.ts","./src/app/mouvement/components/mouvement-list/mouvement-list.component.html","./src/app/mouvement/model/mouvement.ts","./src/app/mouvement/mouvement-routing.module.ts","./src/app/mouvement/mouvement.module.ts","./src/app/mouvement/service/mouvement.service.ts","./src/app/product/components/product-form/product-form.component.ts","./src/app/product/components/product-form/product-form.component.html","./src/app/product/components/product-item/product-item.component.ts","./src/app/product/components/product-item/product-item.component.html","./src/app/product/components/product-list/product-list.component.ts","./src/app/product/components/product-list/product-list.component.html","./src/app/product/components/product-stock-list/product-stock-list.component.ts","./src/app/product/components/product-stock-list/product-stock-list.component.html","./src/app/product/model/product.ts","./src/app/product/product-routing.module.ts","./src/app/product/product.module.ts","./src/app/product/service/product.service.ts","./src/app/provider/components/provider-form/provider-form.component.ts","./src/app/provider/components/provider-form/provider-form.component.html","./src/app/provider/components/provider-item/provider-item.component.ts","./src/app/provider/components/provider-item/provider-item.component.html","./src/app/provider/components/provider-list/provider-list.component.ts","./src/app/provider/components/provider-list/provider-list.component.html","./src/app/provider/model/provider.ts","./src/app/provider/provider-routing.module.ts","./src/app/provider/provider.module.ts","./src/app/provider/service/provider.service.ts","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/shared.module.ts","./src/app/stock/components/stock-form/stock-form.component.ts","./src/app/stock/components/stock-form/stock-form.component.html","./src/app/stock/components/stock-list/stock-list.component.ts","./src/app/stock/components/stock-list/stock-list.component.html","./src/app/stock/model/stock.ts","./src/app/stock/service/stock.service.ts","./src/app/stock/stock-routing.module.ts","./src/app/stock/stock.module.ts","./src/app/unit/components/unit-form/unit-form.component.ts","./src/app/unit/components/unit-form/unit-form.component.html","./src/app/unit/components/unit-item/unit-item.component.ts","./src/app/unit/components/unit-item/unit-item.component.html","./src/app/unit/components/unit-list/unit-list.component.ts","./src/app/unit/components/unit-list/unit-list.component.html","./src/app/unit/model/unit.ts","./src/app/unit/service/unit.service.ts","./src/app/unit/unit-routing.module.ts","./src/app/unit/unit.module.ts","./src/app/user/components/user-form/user-form.component.ts","./src/app/user/components/user-form/user-form.component.html","./src/app/user/components/user-item/user-item.component.ts","./src/app/user/components/user-item/user-item.component.html","./src/app/user/components/user-list/user-list.component.ts","./src/app/user/components/user-list/user-list.component.html","./src/app/user/service/user.service.ts","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts","./src/app/warehouse/components/warehouse-form/warehouse-form.component.ts","./src/app/warehouse/components/warehouse-form/warehouse-form.component.html","./src/app/warehouse/components/warehouse-item/warehouse-item.component.ts","./src/app/warehouse/components/warehouse-item/warehouse-item.component.html","./src/app/warehouse/components/warehouse-list/warehouse-list.component.ts","./src/app/warehouse/components/warehouse-list/warehouse-list.component.html","./src/app/warehouse/model/warehouse.ts","./src/app/warehouse/service/warehouse.service.ts","./src/app/warehouse/warehouse-routing.module.ts","./src/app/warehouse/warehouse.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductListComponent } from './product/components/product-list/product-list.component';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { ProductFormComponent } from './product/components/product-form/product-form.component';\nimport { ProductModule } from './product/product.module';\nimport { CategoryListComponent } from './category/components/category-list/category-list.component';\nimport { UnitListComponent } from './unit/components/unit-list/unit-list.component';\nimport { ProviderListComponent } from './provider/components/provider-list/provider-list.component';\nimport { WarehouseListComponent } from './warehouse/components/warehouse-list/warehouse-list.component';\nimport { LoginComponent } from './authentification/components/login/login.component';\nimport { AuthGaurdService } from './authentification/services/auth-gaurd.service';\nimport { UserListComponent } from './user/components/user-list/user-list.component';\nimport { StockListComponent } from './stock/components/stock-list/stock-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full',\n  },\n  {\n    path: 'products',\n    component: ProductListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'categories',\n    component: CategoryListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'stocks',\n    component: StockListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'units',\n    component: UnitListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'providers',\n    component: ProviderListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'warehouses',\n    component: WarehouseListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'users',\n    component: UserListComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gestionDeStock';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ProductModule } from './product/product.module';\nimport { CategoryModule } from './category/category.module';\nimport { UnitModule } from './unit/unit.module';\nimport { ProviderModule } from './provider/provider.module';\nimport { Warehouse } from './warehouse/model/warehouse';\nimport { WarehouseModule } from './warehouse/warehouse.module';\nimport { UserModule } from './user/user.module';\nimport { AuthentificationModule } from './authentification/authentification.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BasicAuthHtppInterceptorService } from './authentification/services/basic-auth-htpp-interceptor.service';\nimport { StockModule } from './stock/stock.module';\nimport { MouvementModule } from './mouvement/mouvement.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ProductModule,\n    CategoryModule,\n    UnitModule,\n    ProviderModule,\n    WarehouseModule,\n    UserModule,\n    AuthentificationModule,\n    StockModule,\n    MouvementModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BasicAuthHtppInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthentificationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthentificationRoutingModule } from './authentification-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [CommonModule, AuthentificationRoutingModule, SharedModule],\n})\nexport class AuthentificationModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthentificationService } from '../../services/authentification.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n\n  loginInvalid = false;\n\n  constructor(\n    private router: Router,\n    private loginservice: AuthentificationService\n  ) {}\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n    });\n  }\n  get username() {\n    return this.form.get('username');\n  }\n  get password() {\n    return this.form.get('password');\n  }\n\n  checkLogin() {\n    console.log(this.username.value);\n    this.loginservice\n      .authenticate(this.username.value, this.password.value)\n      .subscribe(\n        (data) => {\n          if (data.role == 'User') {\n            this.router.navigate(['/products']);\n          } else {\n            this.router.navigate(['/categories']);\n          }\n          this.loginInvalid = false;\n        },\n        (error) => {\n          this.loginInvalid = true;\n        }\n      );\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <form [formGroup]=\"form\" (ngSubmit)=\"checkLogin()\">\n      <h2>Log In</h2>\n\n      <mat-error *ngIf=\"loginInvalid\">\n        The username and password were not recognised\n      </mat-error>\n\n      <mat-form-field class=\"full-width-input\">\n        <input\n          matInput\n          placeholder=\"Username\"\n          formControlName=\"username\"\n          required\n        />\n\n        <mat-error>\n          Please provide a username\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width-input\">\n        <input\n          matInput\n          type=\"password\"\n          placeholder=\"Password\"\n          formControlName=\"password\"\n          required\n        />\n\n        <mat-error>\n          Please provide a password\n        </mat-error>\n      </mat-form-field>\n\n      <button mat-raised-button color=\"primary\">Login</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { AuthentificationService } from './authentification.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGaurdService implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthentificationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserLoggedIn()) return true;\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { User } from 'src/app/user/model/user';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthentificationService {\n  constructor(private httpClient: HttpClient) {}\n\n  authenticate(username, password) {\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.httpClient\n      .get<User>('http://localhost:8081/utilisateur/' + username, { headers })\n      .pipe(\n        map((userData) => {\n          sessionStorage.setItem('username', username);\n          console.log(userData.role);\n          sessionStorage.setItem('role', userData.role);\n\n          let authString = 'Basic ' + btoa(username + ':' + password);\n          sessionStorage.setItem('basicauth', authString);\n          return userData;\n        })\n      );\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('username');\n    console.log(!(user === null));\n    return !(user === null);\n  }\n\n  logOut() {\n    sessionStorage.removeItem('username');\n    sessionStorage.removeItem('role');\n    sessionStorage.removeItem('basicauth');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BasicAuthHtppInterceptorService implements HttpInterceptor {\n  constructor() {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    if (\n      sessionStorage.getItem('username') &&\n      sessionStorage.getItem('basicauth')\n    ) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: sessionStorage.getItem('basicauth'),\n        },\n      });\n    }\n\n    return next.handle(req);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CategoryListComponent } from './components/category-list/category-list.component';\nimport { CategoryFormComponent } from './components/category-form/category-form.component';\nimport { CategoryItemComponent } from './components/category-item/category-item.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\n\nconst routes: Routes = [\n  {\n    path: 'categoryForm',\n    component: CategoryFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n\n  {\n    path: 'category/:id',\n    component: CategoryItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CategoryRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoryRoutingModule } from './category-routing.module';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { CategoryListComponent } from './components/category-list/category-list.component';\nimport { CategoryFormComponent } from './components/category-form/category-form.component';\nimport { CategoryItemComponent } from './components/category-item/category-item.component';\n\n@NgModule({\n  declarations: [CategoryListComponent, CategoryFormComponent, CategoryItemComponent],\n  imports: [CommonModule, CategoryRoutingModule, SharedModule],\n})\nexport class CategoryModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CategoryService } from '../../service/category.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Category } from '../../model/category';\n\n@Component({\n  selector: 'app-category-form',\n  templateUrl: './category-form.component.html',\n  styleUrls: ['./category-form.component.css'],\n})\nexport class CategoryFormComponent implements OnInit {\n  categoryForm: FormGroup;\n  category: Category;\n\n  get id() {\n    return this.categoryForm.get('id');\n  }\n  get designation() {\n    return this.categoryForm.get('designation');\n  }\n  get description() {\n    return this.categoryForm.get('description');\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private categoryService: CategoryService\n  ) {\n    this.category = new Category();\n  }\n  onSubmit() {\n    this.category = this.categoryForm.value;\n    this.categoryService\n      .save(this.category)\n      .subscribe((result) => this.gotoCategoryList());\n  }\n\n  gotoCategoryList() {\n    this.router.navigate(['/categories']);\n  }\n\n  ngOnInit(): void {\n    this.categoryForm = new FormGroup({\n      designation: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"categoryForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Catégorie / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!categoryForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/categories\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de la catégorie</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile rowspan=\"2\"> </mat-grid-tile>\n\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field id=\"description\">\n          <mat-label>Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CategoryService } from '../../service/category.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Category } from '../../model/category';\n\n@Component({\n  selector: 'app-category-item',\n  templateUrl: './category-item.component.html',\n  styleUrls: ['./category-item.component.css'],\n})\nexport class CategoryItemComponent implements OnInit {\n  codeId: string;\n  categoryForm: FormGroup;\n  category: Category;\n  get designation() {\n    return this.categoryForm.get('designation');\n  }\n\n  get description() {\n    return this.categoryForm.get('description');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private categoryService: CategoryService\n  ) {\n    this.category = new Category();\n  }\n  ngOnInit(): void {\n    this.categoryForm = new FormGroup({\n      designation: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n    });\n    this.codeId = this.route.snapshot.params['id'];\n    this.categoryService.findCategory(this.codeId).subscribe(\n      (data) => {\n        this.category = data[0];\n        console.log(this.category);\n        this.designation.setValue(this.category.designation);\n        this.description.setValue(this.category.description);\n      },\n      (error) => console.log('error')\n    );\n  }\n\n  onSubmit() {\n    this.category = this.categoryForm.value;\n    this.categoryService\n      .update(this.codeId, this.category)\n      .subscribe((result) => this.gotoCurrencyList());\n  }\n\n  gotoCurrencyList() {\n    this.router.navigate(['/categories']);\n  }\n\n  reset() {\n    this.categoryForm.reset();\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"categoryForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Catégorie / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!categoryForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/categories\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de la catégorie</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile rowspan=\"2\"> </mat-grid-tile>\n\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field id=\"description\">\n          <mat-label>Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Category } from '../../model/category';\nimport { CategoryService } from '../../service/category.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css'],\n})\nexport class CategoryListComponent implements OnInit {\n  categories: Category[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = ['id', 'designation', 'description', 'actions'];\n  dataSource = new MatTableDataSource<Category>(this.categories);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private categoryService: CategoryService,\n    private route: Router\n  ) {}\n  deleteCategory(id: number) {\n    this.categoryService.delete(id).subscribe(\n      (data) => {\n        console.log(data);\n        this.categoryService.findAll().subscribe(\n          (data) => {\n            this.categories = data;\n            this.dataSource = new MatTableDataSource<Category>(this.categories);\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Category>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.categoryService.findAll().subscribe(\n      (data) => {\n        this.categories = data;\n        this.dataSource = new MatTableDataSource<Category>(this.categories);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Category>(null);\n      }\n    );\n  }\n  goToCategoryItem(code: string) {\n    this.route.navigate(['/category/' + code]);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Catégories</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/categoryForm\">\n            CREER\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"designation\">\n      <th mat-header-cell *matHeaderCellDef>Designation</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.designation }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteCategory(element.id)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToCategoryItem(element.id)\"\n        >\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","export class Category {\n  id: number;\n  designation: string;\n  description: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Category } from '../model/category';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  private categoryUrl: string;\n  constructor(private http: HttpClient) {\n    this.categoryUrl = 'http://localhost:8081/categorie';\n  }\n  public findAll(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.categoryUrl + 's');\n  }\n  public findCategory(id: string): Observable<Category[]> {\n    return this.http.get<Category[]>(this.categoryUrl + 's?id=' + id);\n  }\n\n  public save(category: Category) {\n    return this.http.post<Category>(this.categoryUrl, category);\n  }\n  public delete(id: number): Observable<any> {\n    return this.http.delete(`${this.categoryUrl}/${id}`);\n  }\n\n  public update(id: string, category: Category): Observable<any> {\n    return this.http.put(`${this.categoryUrl}/${id}`, category);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Mouvement } from '../../model/mouvement';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { ProductService } from 'src/app/product/service/product.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MouvementService } from '../../service/mouvement.service';\nimport { WarehouseService } from 'src/app/warehouse/service/warehouse.service';\nimport { Product } from 'src/app/product/model/product';\nimport { Warehouse } from 'src/app/warehouse/model/warehouse';\nimport { ProviderService } from 'src/app/provider/service/provider.service';\nimport { Provider } from 'src/app/provider/model/provider';\nimport { Stock } from 'src/app/stock/model/stock';\nimport { StockService } from 'src/app/stock/service/stock.service';\n\n@Component({\n  selector: 'app-mouvement-form',\n  templateUrl: './mouvement-form.component.html',\n  styleUrls: ['./mouvement-form.component.css'],\n})\nexport class MouvementFormComponent implements OnInit {\n  mouvementForm: FormGroup;\n  mouvement: Mouvement;\n  products: Product[];\n  stocks: Stock[];\n  providers: Provider[];\n\n  get id() {\n    return this.mouvementForm.get('id');\n  }\n\n  get description() {\n    return this.mouvementForm.get('description');\n  }\n  get type() {\n    return this.mouvementForm.get('type');\n  }\n\n  get quantite() {\n    return this.mouvementForm.get('quantite');\n  }\n\n  get fournisseur() {\n    return this.mouvementForm.get('fournisseur');\n  }\n\n  get emplacement() {\n    return this.mouvementForm.get('emplacement');\n  }\n  get prixAchat() {\n    return this.mouvementForm.get('prixAchat');\n  }\n\n  onFileChanged(event) {\n    const file = event.target.files[0];\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private mouvementService: MouvementService,\n    private productService: ProductService,\n    private providerService: ProviderService,\n    private stockService: StockService\n  ) {\n    this.mouvement = new Mouvement();\n  }\n  onSubmit() {\n    this.mouvement = this.mouvementForm.value;\n    this.mouvement.produit.fournisseur = this.fournisseur.value;\n    this.mouvement.produit.prixAchat = this.prixAchat.value;\n    this.mouvement.produit.description = this.description.value;\n    this.mouvement.produit.quantiteEnStock = this.quantite.value;\n\n    console.log(this.mouvement);\n    this.mouvementService\n      .save(this.mouvement)\n      .subscribe((result) => this.gotoMouvementList());\n  }\n\n  gotoMouvementList() {\n    this.router.navigate(['/mouvements']);\n  }\n\n  ngOnInit(): void {\n    this.mouvementForm = new FormGroup({\n      id: new FormControl('', Validators.nullValidator),\n      type: new FormControl('', Validators.required),\n      produit: new FormControl('', Validators.required),\n      quantite: new FormControl('', Validators.required),\n      fournisseur: new FormControl('', Validators.required),\n      stock: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n      prixAchat: new FormControl('', Validators.required),\n    });\n    this.productService.findAll().subscribe((data) => {\n      this.products = data;\n    });\n    this.stockService.findAll().subscribe((data) => {\n      this.stocks = data;\n    });\n    this.providerService.findAll().subscribe((data) => {\n      this.providers = data;\n    });\n  }\n}\n","<app-header></app-header>\r\n<form [formGroup]=\"mouvementForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"borderBottom\">\r\n    <div class=\"container\">\r\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\r\n        <mat-grid-tile>\r\n          <div fxFlex fxLayoutAlign=\"start center\">\r\n            <h3>Mouvements / <span id=\"New\">Nouveau</span></h3>\r\n          </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile> </mat-grid-tile>\r\n        <mat-grid-tile>\r\n          <div fxFlex fxLayoutAlign=\"start center\">\r\n            <button\r\n              mat-button\r\n              class=\"blueButton\"\r\n              type=\"submit\"\r\n              [disabled]=\"!mouvementForm.valid\"\r\n            >\r\n              Ajouter\r\n            </button>\r\n            <button mat-button class=\"importer\" routerLink=\"/mouvements\">\r\n              Annuler\r\n            </button>\r\n          </div>\r\n        </mat-grid-tile>\r\n      </mat-grid-list>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container content\">\r\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Produit</mat-label>\r\n          <mat-select disableRipple formControlName=\"produit\">\r\n            <mat-option *ngFor=\"let product of products\" [value]=\"product\">\r\n              {{ product.nom }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n      <mat-grid-tile></mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Type</mat-label>\r\n          <mat-select disableRipple formControlName=\"type\">\r\n            <mat-option value=\"Entree\">Entree</mat-option>\r\n            <mat-option value=\"Sortie\">Sortie</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Fournisseur</mat-label>\r\n          <mat-select disableRipple formControlName=\"fournisseur\">\r\n            <mat-option *ngFor=\"let provider of providers\" [value]=\"provider\">\r\n              {{ provider.nom }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Entropot</mat-label>\r\n          <mat-select disableRipple formControlName=\"stock\">\r\n            <mat-option *ngFor=\"let stock of stocks\" [value]=\"stock\">\r\n              {{ stock.emplacement.designation }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Quantite</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"quantite\" />\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Prix d'achat</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"prixAchat\" />\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile colspan=\"2\">\r\n        <mat-form-field id=\"description\">\r\n          <mat-label>Description</mat-label>\r\n          <textarea matInput></textarea>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Mouvement } from '../../model/mouvement';\nimport { MouvementService } from '../../service/mouvement.service';\nimport { Router } from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-mouvement-list',\n  templateUrl: './mouvement-list.component.html',\n  styleUrls: ['./mouvement-list.component.css'],\n})\nexport class MouvementListComponent implements OnInit {\n  mouvements: Mouvement[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'id',\n    'produit',\n    'type',\n    'quantite',\n    'emplacement',\n    'prixAchat',\n    'date',\n  ];\n  dataSource = new MatTableDataSource<Mouvement>(this.mouvements);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private mouvementService: MouvementService,\n    private route: Router\n  ) {}\n\n  ngOnInit() {\n    this.mouvementService.findAll().subscribe(\n      (data) => {\n        this.mouvements = data;\n        this.dataSource = new MatTableDataSource<Mouvement>(this.mouvements);\n        this.dataSource.paginator = this.paginator;\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Mouvement>(null);\n      }\n    );\n  }\n  goToMouvementItem(code: string) {\n    this.route.navigate(['/mouvement/' + code]);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Mouvements</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/mouvementForm\">\n            Creer\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"produit\">\n      <th mat-header-cell *matHeaderCellDef>Produit</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.produit.nom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"type\">\n      <th mat-header-cell *matHeaderCellDef>Type</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef>Date</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.date }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"prixAchat\">\n      <th mat-header-cell *matHeaderCellDef>Prix Achat</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.produit.prixAchat }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"quantite\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.quantite }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"emplacement\">\n      <th mat-header-cell *matHeaderCellDef>Emplacement</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.stock.emplacement.designation }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <p>...</p>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","import { Product } from 'src/app/product/model/product';\nimport { Stock } from 'src/app/stock/model/stock';\nimport { Warehouse } from 'src/app/warehouse/model/warehouse';\n\nexport class Mouvement {\n  produit: Product;\n  type: string;\n  stock: Stock;\n  quantite: number;\n  date: Date;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MouvementFormComponent } from './components/mouvement-form/mouvement-form.component';\n\nconst routes: Routes = [\n  {\n    path: 'mouvementForm',\n    component: MouvementFormComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MouvementRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MouvementRoutingModule } from './mouvement-routing.module';\nimport { MouvementListComponent } from './components/mouvement-list/mouvement-list.component';\nimport { MouvementFormComponent } from './components/mouvement-form/mouvement-form.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [MouvementListComponent, MouvementFormComponent],\n  imports: [CommonModule, MouvementRoutingModule, SharedModule],\n})\nexport class MouvementModule {}\n","import { Injectable } from '@angular/core';\nimport { Mouvement } from '../model/mouvement';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MouvementService {\n  private mouvementUrl: string;\n  constructor(private http: HttpClient) {\n    this.mouvementUrl = 'http://localhost:8081/mouvement';\n  }\n  public findAll(): Observable<Mouvement[]> {\n    return this.http.get<Mouvement[]>(this.mouvementUrl + 's');\n  }\n  public findMouvement(id: string): Observable<Mouvement[]> {\n    return this.http.get<Mouvement[]>(this.mouvementUrl + 's?id=' + id);\n  }\n\n  public save(mouvement: Mouvement) {\n    return this.http.post<Mouvement>(this.mouvementUrl, mouvement);\n  }\n  // public delete(id: number): Observable<any> {\n  //   return this.http.delete(`${this.mouvementUrl}/${id}`);\n  // }\n\n  // public update(id: string, mouvement: Mouvement): Observable<any> {\n  //   return this.http.put(`${this.mouvementUrl}/${id}`, mouvement);\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ProductService } from '../../service/product.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from '../../model/product';\nimport { ProviderService } from 'src/app/provider/service/provider.service';\nimport { WarehouseService } from 'src/app/warehouse/service/warehouse.service';\nimport { UnitService } from 'src/app/unit/service/unit.service';\nimport { CategoryService } from 'src/app/category/service/category.service';\nimport { Provider } from 'src/app/provider/model/provider';\nimport { Category } from 'src/app/category/model/category';\nimport { Warehouse } from 'src/app/warehouse/model/warehouse';\nimport { Unit } from 'src/app/unit/model/unit';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css'],\n})\nexport class ProductFormComponent implements OnInit {\n  productForm: FormGroup;\n  product: Product;\n  providers: Provider[];\n  stateCtrl = new FormControl();\n  filteredStates: Observable<Provider[]>;\n  categories: Category[];\n  warehouses: Warehouse[];\n  units: Unit[];\n\n  get identifiant() {\n    return this.productForm.get('identifiant');\n  }\n  get nom() {\n    return this.productForm.get('nom');\n  }\n  get description() {\n    return this.productForm.get('description');\n  }\n  get type() {\n    return this.productForm.get('type');\n  }\n  get quantiteDisponible() {\n    return this.productForm.get('quantiteDisponible');\n  }\n  get categorie() {\n    return this.productForm.get('categorie');\n  }\n  get fournisseur() {\n    return this.productForm.get('fournisseur');\n  }\n  get uniteDeMesure() {\n    return this.productForm.get('uniteDeMesure');\n  }\n  get emplacement() {\n    return this.productForm.get('emplacement');\n  }\n  get prixAchat() {\n    return this.productForm.get('prixAchat');\n  }\n  get quantiteMin() {\n    return this.productForm.get('quantiteMin');\n  }\n\n  onFileChanged(event) {\n    const file = event.target.files[0];\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService,\n    private providerService: ProviderService,\n    private warehouseService: WarehouseService,\n    private unitService: UnitService,\n    private categoryService: CategoryService\n  ) {\n    this.product = new Product();\n  }\n  onSubmit() {\n    this.product = this.productForm.value;\n    this.productService\n      .save(this.product)\n      .subscribe((result) => this.gotoProductList());\n  }\n\n  gotoProductList() {\n    this.router.navigate(['/products']);\n  }\n\n  ngOnInit(): void {\n    this.productForm = new FormGroup({\n      identifiant: new FormControl('', Validators.nullValidator),\n      nom: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n      type: new FormControl('', Validators.required),\n      categorie: new FormControl('', Validators.required),\n      uniteDeMesure: new FormControl('', Validators.required),\n      quantiteMin: new FormControl('', Validators.required),\n    });\n\n    this.categoryService.findAll().subscribe((data) => {\n      this.categories = data;\n    });\n    this.unitService.findAll().subscribe((data) => {\n      this.units = data;\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Produits / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!productForm.valid\"\n            >\n              Ajouter\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/products\">\n              Annuler\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom produit</mat-label>\n          <input matInput type=\"text\" formControlName=\"nom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile rowspan=\"2\"> </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Type</mat-label>\n          <mat-select disableRipple formControlName=\"type\">\n            <mat-option value=\"Service\">Service</mat-option>\n            <mat-option value=\"Consommable\">Consommable</mat-option>\n            <mat-option value=\"Article stockable\">Article stockable</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Regle de réapprovisionnement</mat-label>\n          <input matInput type=\"text\" formControlName=\"quantiteMin\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile\n        ><mat-form-field class=\"formField\">\n          <mat-label>Catégorie</mat-label>\n          <mat-select disableRipple formControlName=\"categorie\">\n            <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n              {{ category.designation }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field></mat-grid-tile\n      >\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Unite de mesure</mat-label>\n          <mat-select disableRipple formControlName=\"uniteDeMesure\">\n            <mat-option *ngFor=\"let unit of units\" [value]=\"unit\">\n              {{ unit.designation }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field id=\"description\">\n          <mat-label>Description</mat-label>\n          <textarea matInput></textarea>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.css']\n})\nexport class ProductItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>product-item works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Product } from '../../model/product';\nimport { ProductService } from '../../service/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n})\nexport class ProductListComponent implements OnInit {\n  produits: Product[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'identifiant',\n    'nom',\n    'categorie',\n    'typeDeProduit',\n    'quantiteDisponible',\n    'uniteDeMesure',\n    'description',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource<Product>(this.produits);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(private productService: ProductService) {}\n\n  deleteProduct(id: string) {\n    this.productService.delete(id).subscribe(\n      (data) => {\n        this.productService.findAll().subscribe(\n          (data) => {\n            this.produits = data;\n            this.dataSource = new MatTableDataSource<Product>(this.produits);\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Product>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.productService.findAll().subscribe(\n      (data) => {\n        this.produits = data;\n        this.dataSource = new MatTableDataSource<Product>(this.produits);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Product>(null);\n      }\n    );\n  }\n}\n","<app-header></app-header>\n<div class=\"bottomBorder\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Produits</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/productForm\">\n            Creer\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"identifiant\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"nom\">\n      <th mat-header-cell *matHeaderCellDef>Nom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"categorie\">\n      <th mat-header-cell *matHeaderCellDef>Categorie</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.categorie.designation }}\n      </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"typeDeProduit\">\n      <th mat-header-cell *matHeaderCellDef>Type De Produit</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"quantiteDisponible\">\n      <th mat-header-cell *matHeaderCellDef>Quantite disponible</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.quantiteTotale }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"uniteDeMesure\">\n      <th mat-header-cell *matHeaderCellDef>Unite de mesure</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.uniteDeMesure.designation }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteProduct(element.id)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Product } from '../../model/product';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ProductService } from '../../service/product.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-stock-list',\n  templateUrl: './product-stock-list.component.html',\n  styleUrls: ['./product-stock-list.component.css'],\n})\nexport class ProductStockListComponent implements OnInit {\n  produits: Product[];\n  codeId: string;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'identifiant',\n    'nom',\n    'categorie',\n    'typeDeProduit',\n    'emplacement',\n    'prixAchat',\n    'fournisseur',\n    'quantiteEnStock',\n    'uniteDeMesure',\n    'description',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource<Product>(this.produits);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private productService: ProductService,\n    private route: ActivatedRoute\n  ) {}\n\n  deleteProduct(id: string) {\n    this.productService.delete(id).subscribe(\n      (data) => {\n        this.productService.findFullProducts(this.codeId).subscribe(\n          (data) => {\n            this.produits = data;\n            this.dataSource = new MatTableDataSource<Product>(this.produits);\n          },\n          (error) => {\n            Product;\n            this.dataSource = new MatTableDataSource<Product>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.codeId = this.route.snapshot.params['id'];\n    this.productService.findFullProducts(this.codeId).subscribe(\n      (data) => {\n        this.produits = data;\n        this.dataSource = new MatTableDataSource<Product>(this.produits);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Product>(null);\n      }\n    );\n  }\n  enRupture(produit: Product) {\n    console.log(produit.quantiteMin + ':' + produit.quantiteEnStock);\n    if (produit.quantiteMin > produit.quantiteEnStock) {\n      return true;\n    }\n    return false;\n  }\n}\n","<app-header></app-header>\n<div class=\"bottomBorder\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Produits</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/productForm\">\n            Creer\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"identifiant\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"nom\">\n      <th mat-header-cell *matHeaderCellDef>Nom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"categorie\">\n      <th mat-header-cell *matHeaderCellDef>Categorie</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.categorie.designation }}\n      </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"typeDeProduit\">\n      <th mat-header-cell *matHeaderCellDef>Type De Produit</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"quantiteEnStock\">\n      <th mat-header-cell *matHeaderCellDef>Quantite disponible</th>\n      <td\n        mat-cell\n        *matCellDef=\"let element\"\n        [ngClass]=\"{ rupture: enRupture(element) }\"\n      >\n        {{ element.quantiteEnStock }}\n        <span *ngIf=\"enRupture(element)\" class=\"rupture\">\n          (A REAPPROVISIONNER)\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fournisseur\">\n      <th mat-header-cell *matHeaderCellDef>fournisseur</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.fournisseur.nom }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"uniteDeMesure\">\n      <th mat-header-cell *matHeaderCellDef>Unite de mesure</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.uniteDeMesure.designation }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"emplacement\">\n      <th mat-header-cell *matHeaderCellDef>Emplacement</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.stock.emplacement.designation }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"prixAchat\">\n      <th mat-header-cell *matHeaderCellDef>Prix</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.prixAchat }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteProduct(element.id)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","import { Category } from 'src/app/category/model/category';\nimport { Unit } from 'src/app/unit/model/unit';\nimport { Warehouse } from 'src/app/warehouse/model/warehouse';\nimport { Provider } from 'src/app/provider/model/provider';\n\nexport class Product {\n  id: number;\n  nom: string;\n  description: string;\n  type: string;\n  prixAchat: number;\n  quantiteEnStock: number;\n  fournisseur: Provider;\n  categorie: Category;\n  emplacement: Warehouse;\n  uniteDeMesure: Unit;\n  quantiteTotale: number;\n  quantiteMin: number;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductFormComponent } from './components/product-form/product-form.component';\nimport { ProductItemComponent } from './components/product-item/product-item.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\nimport { ProductStockListComponent } from './components/product-stock-list/product-stock-list.component';\n\nconst routes: Routes = [\n  {\n    path: 'productForm',\n    component: ProductFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'productItem',\n    component: ProductItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'stock/:id/products',\n    component: ProductStockListComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProductRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductRoutingModule } from './product-routing.module';\nimport { ProductFormComponent } from './components/product-form/product-form.component';\nimport { ProductItemComponent } from './components/product-item/product-item.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductStockListComponent } from './components/product-stock-list/product-stock-list.component';\n\n@NgModule({\n  declarations: [\n    ProductFormComponent,\n    ProductListComponent,\n    ProductItemComponent,\n    ProductStockListComponent,\n  ],\n  imports: [CommonModule, ProductRoutingModule, SharedModule],\n})\nexport class ProductModule {}\n","import { Injectable } from '@angular/core';\nimport { Product } from '../model/product';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private productUrl: string;\n  constructor(private http: HttpClient) {\n    this.productUrl = 'http://localhost:8081/produit';\n  }\n  public findAll(): Observable<Product[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n\n    return this.http.get<Product[]>(this.productUrl + 's');\n  }\n  public findFullProducts(id: string): Observable<Product[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n\n    return this.http.get<Product[]>(\n      'http://localhost:8081/stock/' + id + '/produits'\n    );\n  }\n  public findProduct(code: string): Observable<Product[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.get<Product[]>(this.productUrl + 's?id=' + code);\n  }\n\n  public save(category: Product) {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.post<Product>(this.productUrl, category);\n  }\n  public delete(id: string): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.delete(`${this.productUrl}/${id}`);\n  }\n\n  public update(id: string, category: Product): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.put(`${this.productUrl}/${id}`, category);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Provider } from '../../model/provider';\nimport { ProviderService } from '../../service/provider.service';\n\n@Component({\n  selector: 'app-provider-form',\n  templateUrl: './provider-form.component.html',\n  styleUrls: ['./provider-form.component.css'],\n})\nexport class ProviderFormComponent implements OnInit {\n  providerForm: FormGroup;\n  provider: Provider;\n\n  get id() {\n    return this.providerForm.get('id');\n  }\n  get nom() {\n    return this.providerForm.get('nom');\n  }\n  get adresse() {\n    return this.providerForm.get('adresse');\n  }\n  get telephone() {\n    return this.providerForm.get('telephone');\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private providerService: ProviderService\n  ) {\n    this.provider = new Provider();\n  }\n  onSubmit() {\n    this.provider = this.providerForm.value;\n    this.providerService\n      .save(this.provider)\n      .subscribe((result) => this.gotoCategoryList());\n  }\n\n  gotoCategoryList() {\n    this.router.navigate(['/providers']);\n  }\n\n  ngOnInit(): void {\n    this.providerForm = new FormGroup({\n      nom: new FormControl('', Validators.required),\n      adresse: new FormControl('', Validators.nullValidator),\n      telephone: new FormControl('', Validators.nullValidator),\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"providerForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Fournisseurs / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!providerForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/providers\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom du fournisseur</mat-label>\n          <input matInput type=\"text\" formControlName=\"nom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Telephone</mat-label>\n          <input matInput type=\"text\" formControlName=\"telephone\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProviderService } from '../../service/provider.service';\nimport { Provider } from '../../model/provider';\n\n@Component({\n  selector: 'app-provider-item',\n  templateUrl: './provider-item.component.html',\n  styleUrls: ['./provider-item.component.css'],\n})\nexport class ProviderItemComponent implements OnInit {\n  codeId: string;\n  providerForm: FormGroup;\n  provider: Provider;\n  get nom() {\n    return this.providerForm.get('nom');\n  }\n\n  get adresse() {\n    return this.providerForm.get('adresse');\n  }\n\n  get telephone() {\n    return this.providerForm.get('telephone');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private providerService: ProviderService\n  ) {\n    this.provider = new Provider();\n  }\n  ngOnInit(): void {\n    this.providerForm = new FormGroup({\n      nom: new FormControl('', Validators.required),\n      adresse: new FormControl('', Validators.nullValidator),\n      telephone: new FormControl('', Validators.nullValidator),\n    });\n    this.codeId = this.route.snapshot.params['id'];\n    console.log(this.codeId);\n    this.providerService.findProvider(this.codeId).subscribe(\n      (data) => {\n        this.provider = data[0];\n        this.nom.setValue(this.provider.nom);\n        this.adresse.setValue(this.provider.adresse);\n        this.telephone.setValue(this.provider.telephone);\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  onSubmit() {\n    this.provider = this.providerForm.value;\n    this.providerService\n      .update(this.codeId, this.provider)\n      .subscribe((result) => this.gotoProviderList());\n  }\n\n  gotoProviderList() {\n    this.router.navigate(['/providers']);\n  }\n\n  reset() {\n    this.providerForm.reset();\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"providerForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Fournisseurs / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!providerForm.valid\"\n            >\n              Modifier\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/providers\">\n              Annuler\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom du fournisseur</mat-label>\n          <input matInput type=\"text\" formControlName=\"nom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Telephone</mat-label>\n          <input matInput type=\"text\" formControlName=\"telephone\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ProviderService } from '../../service/provider.service';\nimport { Provider } from '../../model/provider';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-provider-list',\n  templateUrl: './provider-list.component.html',\n  styleUrls: ['./provider-list.component.css'],\n})\nexport class ProviderListComponent implements OnInit {\n  providers: Provider[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'identifiant',\n    'nom',\n    'adresse',\n    'telephone',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource<Provider>(this.providers);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private providerService: ProviderService,\n    private route: Router\n  ) {}\n  deleteProvider(id: string) {\n    this.providerService.delete(id).subscribe(\n      (data) => {\n        console.log(data);\n        this.providerService.findAll().subscribe(\n          (data) => {\n            this.providers = data;\n            this.dataSource = new MatTableDataSource<Provider>(this.providers);\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Provider>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.providerService.findAll().subscribe(\n      (data) => {\n        this.providers = data;\n        this.dataSource = new MatTableDataSource<Provider>(this.providers);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Provider>(null);\n      }\n    );\n  }\n  goToProviderItem(code: string) {\n    this.route.navigate(['/provider/' + code]);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Fournisseurs</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/providerForm\">\n            CREER\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"identifiant\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"nom\">\n      <th mat-header-cell *matHeaderCellDef>Nom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"adresse\">\n      <th mat-header-cell *matHeaderCellDef>Adresse</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.adresse }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"telephone\">\n      <th mat-header-cell *matHeaderCellDef>Telephone</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.telephone }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteProvider(element.id)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToProviderItem(element.id)\"\n        >\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","export class Provider {\n  id: number;\n  nom: string;\n  adresse: string;\n  telephone: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProviderFormComponent } from './components/provider-form/provider-form.component';\nimport { ProviderItemComponent } from './components/provider-item/provider-item.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\n\nconst routes: Routes = [\n  {\n    path: 'providerForm',\n    component: ProviderFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'provider/:id',\n    component: ProviderItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProviderRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProviderRoutingModule } from './provider-routing.module';\nimport { ProviderListComponent } from './components/provider-list/provider-list.component';\nimport { ProviderFormComponent } from './components/provider-form/provider-form.component';\nimport { ProviderItemComponent } from './components/provider-item/provider-item.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    ProviderListComponent,\n    ProviderFormComponent,\n    ProviderItemComponent,\n  ],\n  imports: [CommonModule, ProviderRoutingModule, SharedModule],\n})\nexport class ProviderModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Provider } from '../model/provider';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProviderService {\n  private providerUrl: string;\n  constructor(private http: HttpClient) {\n    this.providerUrl = 'http://localhost:8081/fournisseur';\n  }\n  public findAll(): Observable<Provider[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n\n    return this.http.get<Provider[]>(this.providerUrl + 's');\n  }\n  public findProvider(code: string): Observable<Provider[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.get<Provider[]>(this.providerUrl + 's?id=' + code);\n  }\n\n  public save(category: Provider) {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.post<Provider>(this.providerUrl, category);\n  }\n  public delete(id: string): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.delete(`${this.providerUrl}/${id}`);\n  }\n\n  public update(id: string, category: Provider): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.put(`${this.providerUrl}/${id}`, category);\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthentificationService } from 'src/app/authentification/services/authentification.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  role: string;\n  @Output() toggleSideBarForMe: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private router: Router,\n    private authentificationService: AuthentificationService\n  ) {}\n\n  ngOnInit() {\n    this.role = sessionStorage.getItem('role');\n  }\n  logOut() {\n    this.authentificationService.logOut();\n    this.router.navigate(['']);\n  }\n  isUser() {\n    if (this.role === 'User') {\n      return true;\n    }\n    return false;\n  }\n  isAdmin() {\n    if (this.role === 'Admin') {\n      return true;\n    }\n    return false;\n  }\n  toggleSideBar() {\n    this.toggleSideBarForMe.emit();\n    setTimeout(() => {\n      window.dispatchEvent(new Event('resize'));\n    }, 300);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button (click)=\"toggleSideBar()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n\n    <span> gStock </span>\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"center\">\n      <button *ngIf=\"isUser()\" mat-button routerLink=\"/products\">\n        Produits\n      </button>\n      <button mat-button [matMenuTriggerFor]=\"config\">\n        Configuration\n      </button>\n      <mat-menu #config=\"matMenu\">\n        <button mat-menu-item routerLink=\"/categories\">Catégories</button>\n        <button mat-menu-item routerLink=\"/units\">Unités de mesure</button>\n        <button mat-menu-item routerLink=\"/providers\">\n          Fournisseurs\n        </button>\n        <button mat-menu-item routerLink=\"/warehouses\">Emplacements</button>\n        <button mat-menu-item routerLink=\"/users\">Employés</button>\n      </mat-menu>\n\n      <button mat-button [matMenuTriggerFor]=\"rapports\">\n        Rapports\n      </button>\n      <mat-menu #rapports=\"matMenu\">\n        <button mat-menu-item routerLink=\"/mouvements\">\n          Mouvements de stock\n        </button>\n\n        <button mat-menu-item routerLink=\"/stocks\">\n          Stock par emplacement\n        </button>\n      </mat-menu>\n    </div>\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\n      <ul fxLayout=\"row\" fxLayoutGap=\"20px\">\n        <li>\n          <button mat-icon-button>\n            <mat-icon>settings</mat-icon>\n          </button>\n        </li>\n        <li>\n          <button mat-icon-button>\n            <mat-icon>help_outline</mat-icon>\n          </button>\n        </li>\n        <li>\n          <button mat-button [matMenuTriggerFor]=\"signOut\">\n            <mat-icon>person_outline</mat-icon>\n          </button>\n          <mat-menu #signOut=\"matMenu\">\n            <button mat-menu-item (click)=\"logOut()\">\n              <mat-icon>exit_to_app</mat-icon>\n              Sign out\n            </button>\n          </mat-menu>\n        </li>\n      </ul>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { RouterModule } from '@angular/router';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HighchartsChartModule } from 'highcharts-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    RouterModule,\n    HighchartsChartModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  exports: [\n    HeaderComponent,\n    HttpClientModule,\n    CommonModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    RouterModule,\n    HighchartsChartModule,\n    FlexLayoutModule,\n  ],\n})\nexport class SharedModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Stock } from '../../model/stock';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { StockService } from '../../service/stock.service';\nimport { WarehouseService } from 'src/app/warehouse/service/warehouse.service';\nimport { Warehouse } from 'src/app/warehouse/model/warehouse';\n\n@Component({\n  selector: 'app-stock-form',\n  templateUrl: './stock-form.component.html',\n  styleUrls: ['./stock-form.component.css'],\n})\nexport class StockFormComponent implements OnInit {\n  stockForm: FormGroup;\n  stock: Stock;\n  warehouses: Warehouse[];\n\n  get id() {\n    return this.stockForm.get('id');\n  }\n  get telephone() {\n    return this.stockForm.get('telephone');\n  }\n  get fax() {\n    return this.stockForm.get('fax');\n  }\n\n  get emplacement() {\n    return this.stockForm.get('emplacement');\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private stockService: StockService,\n    private warehouseService: WarehouseService\n  ) {\n    this.stock = new Stock();\n  }\n  onSubmit() {\n    this.stock = this.stockForm.value;\n    this.stockService\n      .save(this.stock)\n      .subscribe((result) => this.gotoStockList());\n  }\n\n  gotoStockList() {\n    this.router.navigate(['/stocks']);\n  }\n\n  ngOnInit(): void {\n    this.stockForm = new FormGroup({\n      telephone: new FormControl('', Validators.required),\n      fax: new FormControl('', Validators.required),\n      emplacement: new FormControl('', Validators.required),\n    });\n    this.warehouseService.findWarehousesWithoutStock().subscribe((data) => {\n      this.warehouses = data;\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"stockForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Stocks / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!stockForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/stocks\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Entrepot</mat-label>\n          <mat-select disableRipple formControlName=\"emplacement\">\n            <mat-option\n              *ngFor=\"let warehouse of warehouses\"\n              [value]=\"warehouse\"\n            >\n              {{ warehouse.designation }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Telephone du stock</mat-label>\n          <input matInput type=\"text\" formControlName=\"telephone\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Fax</mat-label>\n          <input matInput type=\"text\" formControlName=\"fax\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Stock } from '../../model/stock';\nimport { StockService } from '../../service/stock.service';\nimport { Router } from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-stock-list',\n  templateUrl: './stock-list.component.html',\n  styleUrls: ['./stock-list.component.css'],\n})\nexport class StockListComponent implements OnInit {\n  stocks: Stock[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'identifiant',\n    'fax',\n    'telephone',\n    'emplacement',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource<Stock>(this.stocks);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(private stockService: StockService, private route: Router) {}\n  deleteStock(id: number) {\n    console.log(id);\n    this.stockService.delete(id).subscribe(\n      (data) => {\n        this.stockService.findAll().subscribe(\n          (data) => {\n            this.stocks = data;\n            this.dataSource = new MatTableDataSource<Stock>(this.stocks);\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Stock>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.stockService.findAll().subscribe(\n      (data) => {\n        this.stocks = data;\n        this.dataSource = new MatTableDataSource<Stock>(this.stocks);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Stock>(null);\n      }\n    );\n  }\n  goToProducts(code: string) {\n    this.route.navigate(['/stock/' + code + '/products']);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Stocks</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/stockForm\">\n            CREER\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"identifiant\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"telephone\">\n      <th mat-header-cell *matHeaderCellDef>Telephone</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.telephone }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fax\">\n      <th mat-header-cell *matHeaderCellDef>Fax</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.fax }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"emplacement\">\n      <th mat-header-cell *matHeaderCellDef>Emplacement</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.emplacement.designation }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" (click)=\"deleteStock(element.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToProducts(element.id)\"\n        >\n          <mat-icon>list</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","import { Warehouse } from 'src/app/warehouse/model/warehouse';\n\nexport class Stock {\n  id: number;\n  telephone: string;\n  fax: string;\n  emplacement: Warehouse;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Stock } from '../model/stock';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StockService {\n  private stockUrl: string;\n  constructor(private http: HttpClient) {\n    this.stockUrl = 'http://localhost:8081/stock';\n  }\n  public findAll(): Observable<Stock[]> {\n    return this.http.get<Stock[]>(this.stockUrl + 's');\n  }\n\n  public findStock(id: string): Observable<Stock[]> {\n    return this.http.get<Stock[]>(this.stockUrl + 's?id=' + id);\n  }\n\n  public save(category: Stock) {\n    return this.http.post<Stock>(this.stockUrl, category);\n  }\n  public delete(id: number): Observable<any> {\n    return this.http.delete(`${this.stockUrl}/${id}`);\n  }\n\n  public update(id: string, category: Stock): Observable<any> {\n    return this.http.put(`${this.stockUrl}/${id}`, category);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StockFormComponent } from './components/stock-form/stock-form.component';\nimport { StockListComponent } from './components/stock-list/stock-list.component';\n\nconst routes: Routes = [\n  {\n    path: 'stockForm',\n    component: StockFormComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StockRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StockRoutingModule } from './stock-routing.module';\nimport { StockListComponent } from './components/stock-list/stock-list.component';\nimport { StockFormComponent } from './components/stock-form/stock-form.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [StockListComponent, StockFormComponent],\n  imports: [CommonModule, StockRoutingModule, SharedModule],\n})\nexport class StockModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CategoryService } from 'src/app/category/service/category.service';\nimport { Unit } from '../../model/unit';\nimport { UnitService } from '../../service/unit.service';\n\n@Component({\n  selector: 'app-unit-form',\n  templateUrl: './unit-form.component.html',\n  styleUrls: ['./unit-form.component.css'],\n})\nexport class UnitFormComponent implements OnInit {\n  unitForm: FormGroup;\n  unit: Unit;\n\n  get nom() {\n    return this.unitForm.get('designation');\n  }\n  get description() {\n    return this.unitForm.get('description');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private unitService: UnitService\n  ) {\n    this.unit = new Unit();\n  }\n  onSubmit() {\n    this.unit = this.unitForm.value;\n    this.unitService.save(this.unit).subscribe((result) => this.gotoUnitList());\n  }\n\n  gotoUnitList() {\n    this.router.navigate(['/units']);\n  }\n\n  ngOnInit(): void {\n    this.unitForm = new FormGroup({\n      designation: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"unitForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Unités de mesure / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!unitForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/units\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de l'unité</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile rowspan=\"2\"> </mat-grid-tile>\n\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field id=\"description\">\n          <mat-label>Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Unit } from '../../model/unit';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UnitService } from '../../service/unit.service';\n\n@Component({\n  selector: 'app-unit-item',\n  templateUrl: './unit-item.component.html',\n  styleUrls: ['./unit-item.component.css'],\n})\nexport class UnitItemComponent implements OnInit {\n  codeId: string;\n  unitForm: FormGroup;\n  unit: Unit;\n  get designation() {\n    return this.unitForm.get('designation');\n  }\n\n  get description() {\n    return this.unitForm.get('description');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private unitService: UnitService\n  ) {\n    this.unit = new Unit();\n  }\n  ngOnInit(): void {\n    this.unitForm = new FormGroup({\n      designation: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n    });\n    this.codeId = this.route.snapshot.params['id'];\n    this.unitService.findUnit(this.codeId).subscribe(\n      (data) => {\n        this.unit = data[0];\n        this.designation.setValue(this.unit.designation);\n        this.description.setValue(this.unit.description);\n      },\n      (error) => console.log('error')\n    );\n  }\n\n  onSubmit() {\n    this.unit = this.unitForm.value;\n    this.unitService\n      .update(this.codeId, this.unit)\n      .subscribe((result) => this.gotoUnitList());\n  }\n\n  gotoUnitList() {\n    this.router.navigate(['/units']);\n  }\n\n  reset() {\n    this.unitForm.reset();\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"unitForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Unités de mesure / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!unitForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/units\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de l'unité</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile rowspan=\"2\"> </mat-grid-tile>\n\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field id=\"description\">\n          <mat-label>Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Unit } from '../../model/unit';\nimport { UnitService } from '../../service/unit.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-unit-list',\n  templateUrl: './unit-list.component.html',\n  styleUrls: ['./unit-list.component.css'],\n})\nexport class UnitListComponent implements OnInit {\n  units: Unit[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = ['id', 'designation', 'description', 'actions'];\n  dataSource = new MatTableDataSource<Unit>(this.units);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(private unitService: UnitService, private route: Router) {}\n  deleteUnit(id: string) {\n    this.unitService.delete(id).subscribe(\n      (data) => {\n        console.log(data);\n        this.unitService.findAll().subscribe(\n          (data) => {\n            this.units = data;\n            this.dataSource = new MatTableDataSource<Unit>(this.units);\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Unit>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.unitService.findAll().subscribe(\n      (data) => {\n        this.units = data;\n        this.dataSource = new MatTableDataSource<Unit>(this.units);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Unit>(null);\n      }\n    );\n  }\n  goToUnitItem(code: string) {\n    this.route.navigate(['/unit/' + code]);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Unités de mesure</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/unitForm\">\n            CREER\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"designation\">\n      <th mat-header-cell *matHeaderCellDef>Designation</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.designation }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" (click)=\"deleteUnit(element.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToUnitItem(element.id)\"\n        >\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","export class Unit {\n  id: number;\n  designation: string;\n  description: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Unit } from '../model/unit';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitService {\n  private unitUrl: string;\n  private unitUrl2: string;\n  constructor(private http: HttpClient) {\n    this.unitUrl = 'http://localhost:8081/unitesDeMesure';\n    this.unitUrl2 = 'http://localhost:8081/uniteDeMesure';\n  }\n  public findAll(): Observable<Unit[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n\n    return this.http.get<Unit[]>(this.unitUrl);\n  }\n  public findUnit(id: string): Observable<Unit[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.get<Unit[]>(this.unitUrl + '?id=' + id);\n  }\n\n  public save(unit: Unit) {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.post<Unit>(this.unitUrl2, unit);\n  }\n  public delete(id: string): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.delete(`${this.unitUrl2}/${id}`);\n  }\n\n  public update(id: string, unit: Unit): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.put(`${this.unitUrl2}/${id}`, unit);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UnitFormComponent } from './components/unit-form/unit-form.component';\nimport { UnitItemComponent } from './components/unit-item/unit-item.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\n\nconst routes: Routes = [\n  {\n    path: 'unitForm',\n    component: UnitFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'unit/:id',\n    component: UnitItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UnitRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UnitRoutingModule } from './unit-routing.module';\nimport { UnitListComponent } from './components/unit-list/unit-list.component';\nimport { UnitFormComponent } from './components/unit-form/unit-form.component';\nimport { UnitItemComponent } from './components/unit-item/unit-item.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [UnitListComponent, UnitFormComponent, UnitItemComponent],\n  imports: [CommonModule, UnitRoutingModule, SharedModule],\n})\nexport class UnitModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../model/user';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../../service/user.service';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css'],\n})\nexport class UserFormComponent implements OnInit {\n  user: User;\n  users: User[];\n  userForm = new FormGroup({\n    nom: new FormControl('', Validators.required),\n    prenom: new FormControl('', Validators.required),\n    cin: new FormControl('', Validators.nullValidator),\n    adresse: new FormControl('', Validators.nullValidator),\n    telephone: new FormControl('', Validators.nullValidator),\n    username: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.email, Validators.required]),\n    role: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n  });\n\n  get prenom() {\n    return this.userForm.get('prenom');\n  }\n\n  get nom() {\n    return this.userForm.get('nom');\n  }\n\n  get cin() {\n    return this.userForm.get('cin');\n  }\n\n  get adresse() {\n    return this.userForm.get('adresse');\n  }\n  get telephone() {\n    return this.userForm.get('telephone');\n  }\n\n  get username() {\n    return this.userForm.get('username');\n  }\n\n  get email() {\n    return this.userForm.get('email');\n  }\n  get role() {\n    return this.userForm.get('role');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    this.user = this.userForm.value;\n    console.log(this.user);\n    this.userService.save(this.user).subscribe((result) => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['/users']);\n  }\n\n  reset() {\n    this.userForm.reset();\n  }\n}\n","<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"bottomBorder\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile class=\"fullheight\">\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              value=\"Valider\"\n              [disabled]=\"!userForm.valid\"\n            >\n              Valider\n            </button>\n            <button mat-button class=\"blueButton\" (click)=\"reset()\">\n              Rénitialiser\n            </button>\n            <button mat-button class=\"blueButton\" routerLink=\"/users\">\n              Annuler\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"6:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom </mat-label>\n          <input matInput type=\"text\" formControlName=\"nom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Prenom </mat-label>\n          <input matInput type=\"text\" formControlName=\"prenom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>CIN</mat-label>\n          <input matInput type=\"text\" formControlName=\"cin\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Telephone</mat-label>\n          <input matInput type=\"text\" formControlName=\"telephone\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Username</mat-label>\n          <input matInput type=\"text\" formControlName=\"username\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Email</mat-label>\n          <input matInput type=\"text\" formControlName=\"email\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Role</mat-label>\n          <mat-select disableRipple formControlName=\"role\">\n            <mat-option value=\"Admin\">Administrateur</mat-option>\n            <mat-option value=\"User\">Utilisateur</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../../service/user.service';\nimport { User } from '../../model/user';\n\n@Component({\n  selector: 'app-user-item',\n  templateUrl: './user-item.component.html',\n  styleUrls: ['./user-item.component.css'],\n})\nexport class UserItemComponent implements OnInit {\n  user: User;\n  users: User[];\n  id: string;\n  userForm = new FormGroup({\n    nom: new FormControl('', Validators.required),\n    prenom: new FormControl('', Validators.required),\n    cin: new FormControl('', Validators.nullValidator),\n    adresse: new FormControl('', Validators.nullValidator),\n    telephone: new FormControl('', Validators.nullValidator),\n    username: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.email, Validators.required]),\n    role: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.nullValidator),\n  });\n\n  get prenom() {\n    return this.userForm.get('prenom');\n  }\n\n  get nom() {\n    return this.userForm.get('nom');\n  }\n\n  get cin() {\n    return this.userForm.get('cin');\n  }\n\n  get adresse() {\n    return this.userForm.get('adresse');\n  }\n  get telephone() {\n    return this.userForm.get('telephone');\n  }\n\n  get username() {\n    return this.userForm.get('username');\n  }\n\n  get email() {\n    return this.userForm.get('email');\n  }\n\n  get agence() {\n    return this.userForm.get('agence');\n  }\n  get password() {\n    return this.userForm.get('password');\n  }\n  get role() {\n    return this.userForm.get('role');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.userService.findUser(this.id).subscribe(\n      (data) => {\n        this.user = data[0];\n        this.adresse.setValue(this.user.adresse);\n        this.nom.setValue(this.user.nom);\n        this.telephone.setValue(this.user.telephone);\n        this.prenom.setValue(this.user.prenom);\n        this.email.setValue(this.user.email);\n        this.username.setValue(this.user.username);\n        this.cin.setValue(this.user.cin);\n        this.role.setValue(this.user.role);\n        this.password.setValue(this.user.password);\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  onSubmit() {\n    if (this.password.value == this.user.password) {\n      this.password.setValue(null);\n    }\n    this.user = this.userForm.value;\n\n    this.userService\n      .update(this.id, this.user)\n      .subscribe((result) => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['users']);\n  }\n\n  reset() {\n    this.userForm.reset(this.user);\n  }\n\n  goBack() {\n    this.router.navigate(['users']);\n  }\n}\n","<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"bottomBorder\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile class=\"fullheight\">\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              value=\"Valider\"\n              [disabled]=\"!userForm.valid\"\n            >\n              Modifier\n            </button>\n            <button mat-button class=\"blueButton\" (click)=\"reset()\">\n              Rénitialiser\n            </button>\n            <button mat-button class=\"blueButton\" routerLink=\"/users\">\n              Annuler\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"6:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom </mat-label>\n          <input matInput type=\"text\" formControlName=\"nom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Prenom </mat-label>\n          <input matInput type=\"text\" formControlName=\"prenom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>CIN</mat-label>\n          <input matInput type=\"text\" formControlName=\"cin\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Telephone</mat-label>\n          <input matInput type=\"text\" formControlName=\"telephone\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Username</mat-label>\n          <input matInput type=\"text\" formControlName=\"username\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Email</mat-label>\n          <input matInput type=\"text\" formControlName=\"email\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Role</mat-label>\n          <input matInput type=\"text\" formControlName=\"role\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { User } from '../../model/user';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { UserService } from '../../service/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n})\nexport class UserListComponent implements OnInit {\n  users: User[];\n\n  dataSource = new MatTableDataSource<User>(this.users);\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'id',\n    'username',\n    'nom',\n    'prenom',\n    'email',\n    'cin',\n    'adresse',\n    'telephone',\n    'role',\n    'actions',\n  ];\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(private userService: UserService, private route: Router) {}\n\n  deleteAgent(id: number) {\n    this.userService.delete(id).subscribe(\n      (data) => {\n        console.log(data);\n\n        this.userService.findAll().subscribe(\n          (data) => {\n            this.users = data;\n            this.dataSource = new MatTableDataSource<User>(this.users);\n            this.dataSource.paginator = this.paginator;\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<User>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit(): void {\n    this.userService.findAll().subscribe(\n      (data) => {\n        this.users = data;\n        this.dataSource = new MatTableDataSource<User>(this.users);\n        this.dataSource.paginator = this.paginator;\n      },\n      (error) => {\n        this.dataSource = new MatTableDataSource<User>(null);\n      }\n    );\n  }\n  goToUserItem(code: string) {\n    this.route.navigate(['/user/' + code]);\n  }\n}\n","<app-header></app-header>\n<div class=\"bottomBorder\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile class=\"fullheight\">\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/userForm\">\n            Ajouter\n          </button>\n        </div>\n      </mat-grid-tile>\n      <mat-grid-tile class=\"fullheight\">\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"nom\">\n      <th mat-header-cell *matHeaderCellDef>Nom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"prenom\">\n      <th mat-header-cell *matHeaderCellDef>Prenom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.prenom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"cin\">\n      <th mat-header-cell *matHeaderCellDef>CIN</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.cin }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"adresse\">\n      <th mat-header-cell *matHeaderCellDef>Adresse</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.adresse }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"telephone\">\n      <th mat-header-cell *matHeaderCellDef>Telephone</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.telephone }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"username\">\n      <th mat-header-cell *matHeaderCellDef>Username</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.username }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef>Role</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.role }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" (click)=\"deleteAgent(element.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToUserItem(element.id)\"\n        >\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../model/user';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private userUrl: string;\n  constructor(private http: HttpClient) {\n    this.userUrl = 'http://localhost:8081/utilisateur';\n  }\n  public findAll(): Observable<User[]> {\n    return this.http.get<User[]>(this.userUrl + 's');\n  }\n\n  public save(user: User) {\n    return this.http.post<User>(this.userUrl, user);\n  }\n  delete(id: number): Observable<any> {\n    return this.http.delete(`${this.userUrl}/${id}`);\n  }\n  public findUser(id: string): Observable<User[]> {\n    return this.http.get<User[]>(this.userUrl + 's?id=' + id);\n  }\n  public update(id: string, user: User): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.put(`${this.userUrl}/${id}`, user, { headers });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserFormComponent } from './components/user-form/user-form.component';\nimport { UserItemComponent } from './components/user-item/user-item.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\n\nconst routes: Routes = [\n  {\n    path: 'userForm',\n    component: UserFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n\n  {\n    path: 'user/:id',\n    component: UserItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { UserItemComponent } from './components/user-item/user-item.component';\nimport { UserFormComponent } from './components/user-form/user-form.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [UserListComponent, UserItemComponent, UserFormComponent],\n  imports: [CommonModule, UserRoutingModule, SharedModule],\n})\nexport class UserModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WarehouseService } from '../../service/warehouse.service';\nimport { Warehouse } from '../../model/warehouse';\n\n@Component({\n  selector: 'app-warehouse-form',\n  templateUrl: './warehouse-form.component.html',\n  styleUrls: ['./warehouse-form.component.css'],\n})\nexport class WarehouseFormComponent implements OnInit {\n  warehouseForm: FormGroup;\n  warehouse: Warehouse;\n\n  get id() {\n    return this.warehouseForm.get('id');\n  }\n  get nom() {\n    return this.warehouseForm.get('nom');\n  }\n  get adresse() {\n    return this.warehouseForm.get('adresse');\n  }\n\n  get designation() {\n    return this.warehouseForm.get('designation');\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private warehouseService: WarehouseService\n  ) {\n    this.warehouse = new Warehouse();\n  }\n  onSubmit() {\n    this.warehouse = this.warehouseForm.value;\n    this.warehouseService\n      .save(this.warehouse)\n      .subscribe((result) => this.gotoWarehouseList());\n  }\n\n  gotoWarehouseList() {\n    this.router.navigate(['/warehouses']);\n  }\n\n  ngOnInit(): void {\n    this.warehouseForm = new FormGroup({\n      adresse: new FormControl('', Validators.nullValidator),\n      designation: new FormControl('', Validators.required),\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"warehouseForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Emplacements / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!warehouseForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/warehouses\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de l'emplacement</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WarehouseService } from '../../service/warehouse.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Warehouse } from '../../model/warehouse';\n\n@Component({\n  selector: 'app-warehouse-item',\n  templateUrl: './warehouse-item.component.html',\n  styleUrls: ['./warehouse-item.component.css'],\n})\nexport class WarehouseItemComponent implements OnInit {\n  codeId: string;\n  warehouseForm: FormGroup;\n  warehouse: Warehouse;\n  get designation() {\n    return this.warehouseForm.get('designation');\n  }\n\n  get adresse() {\n    return this.warehouseForm.get('adresse');\n  }\n  get description() {\n    return this.warehouseForm.get('description');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private warehouseService: WarehouseService\n  ) {\n    this.warehouse = new Warehouse();\n  }\n  ngOnInit(): void {\n    this.warehouseForm = new FormGroup({\n      designation: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n      adresse: new FormControl('', Validators.nullValidator),\n    });\n    this.codeId = this.route.snapshot.params['id'];\n    this.warehouseService.findWarehouse(this.codeId).subscribe(\n      (data) => {\n        this.warehouse = data[0];\n        console.log(this.warehouse);\n        this.designation.setValue(this.warehouse.designation);\n        this.adresse.setValue(this.warehouse.adresse);\n      },\n      (error) => console.log('error')\n    );\n  }\n\n  onSubmit() {\n    this.warehouse = this.warehouseForm.value;\n    this.warehouseService\n      .update(this.codeId, this.warehouse)\n      .subscribe((result) => this.gotoWarehouseList());\n  }\n\n  gotoWarehouseList() {\n    this.router.navigate(['/warehouses']);\n  }\n\n  reset() {\n    this.warehouseForm.reset(this.warehouse);\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"warehouseForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Emplacements / <span id=\"New\">Modifier</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!warehouseForm.valid\"\n            >\n              Modifier\n            </button>\n\n            <button mat-button class=\"importer\" routerLink=\"/warehouses\">\n              Annuler\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de l'emplacement</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { WarehouseService } from '../../service/warehouse.service';\nimport { Warehouse } from '../../model/warehouse';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-warehouse-list',\n  templateUrl: './warehouse-list.component.html',\n  styleUrls: ['./warehouse-list.component.css'],\n})\nexport class WarehouseListComponent implements OnInit {\n  warehouses: Warehouse[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = ['id', 'designation', 'adresse', 'actions'];\n  dataSource = new MatTableDataSource<Warehouse>(this.warehouses);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private warehouseService: WarehouseService,\n    private route: Router\n  ) {}\n  deleteWarehouse(id: string) {\n    this.warehouseService.delete(id).subscribe(\n      (data) => {\n        console.log(data);\n        this.warehouseService.findAll().subscribe(\n          (data) => {\n            this.warehouses = data;\n            this.dataSource = new MatTableDataSource<Warehouse>(\n              this.warehouses\n            );\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Warehouse>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.warehouseService.findAll().subscribe(\n      (data) => {\n        this.warehouses = data;\n        this.dataSource = new MatTableDataSource<Warehouse>(this.warehouses);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Warehouse>(null);\n      }\n    );\n  }\n  goToWarehouseItem(code: string) {\n    this.route.navigate(['/warehouse/' + code]);\n  }\n  goToStockForm(code: string) {\n    this.route.navigate(['/warehouse/' + code + '/stockForm']);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Emplacements</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/warehouseForm\">\n            CREER\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"designation\">\n      <th mat-header-cell *matHeaderCellDef>Designation</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.designation }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"adresse\">\n      <th mat-header-cell *matHeaderCellDef>Adresse</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.adresse }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteWarehouse(element.id)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToWarehouseItem(element.id)\"\n        >\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","export class Warehouse {\n  id: number;\n\n  designation: string;\n  adresse: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Warehouse } from '../model/warehouse';\nimport { Observable } from 'rxjs';\nimport { Stock } from 'src/app/stock/model/stock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WarehouseService {\n  private warehouseUrl: string;\n  constructor(private http: HttpClient) {\n    this.warehouseUrl = 'http://localhost:8081/emplacement';\n  }\n  public findAll(): Observable<Warehouse[]> {\n    return this.http.get<Warehouse[]>(this.warehouseUrl + 's');\n  }\n  public findWarehouse(id: string): Observable<Warehouse[]> {\n    return this.http.get<Warehouse[]>(this.warehouseUrl + 's?id=' + id);\n  }\n  public findWarehousesWithoutStock(): Observable<Warehouse[]> {\n    return this.http.get<Warehouse[]>(this.warehouseUrl + 's/sansStock');\n  }\n  public findStock(id: string): Observable<Stock> {\n    console.log('WAREHOUSE SERVICE : ' + id);\n    return this.http.get<Stock>(this.warehouseUrl + '/' + id + '/stock');\n  }\n\n  public save(warehouse: Warehouse) {\n    return this.http.post<Warehouse>(this.warehouseUrl, warehouse);\n  }\n  public delete(id: string): Observable<any> {\n    return this.http.delete(`${this.warehouseUrl}/${id}`);\n  }\n\n  public update(id: string, warehouse: Warehouse): Observable<any> {\n    return this.http.put(`${this.warehouseUrl}/${id}`, warehouse);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WarehouseFormComponent } from './components/warehouse-form/warehouse-form.component';\nimport { WarehouseItemComponent } from './components/warehouse-item/warehouse-item.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\nimport { MouvementListComponent } from '../mouvement/components/mouvement-list/mouvement-list.component';\n\nconst routes: Routes = [\n  {\n    path: 'warehouseForm',\n    component: WarehouseFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'mouvements',\n    component: MouvementListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'warehouse/:id',\n    component: WarehouseItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WarehouseRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WarehouseRoutingModule } from './warehouse-routing.module';\nimport { WarehouseItemComponent } from './components/warehouse-item/warehouse-item.component';\nimport { WarehouseFormComponent } from './components/warehouse-form/warehouse-form.component';\nimport { WarehouseListComponent } from './components/warehouse-list/warehouse-list.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    WarehouseItemComponent,\n    WarehouseFormComponent,\n    WarehouseListComponent,\n  ],\n  imports: [CommonModule, WarehouseRoutingModule, SharedModule],\n})\nexport class WarehouseModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}