{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentification/authentification-routing.module.ts","webpack:///src/app/authentification/authentification.module.ts","webpack:///src/app/authentification/components/login/login.component.ts","webpack:///src/app/authentification/components/login/login.component.html","webpack:///src/app/authentification/services/auth-gaurd.service.ts","webpack:///src/app/authentification/services/authentification.service.ts","webpack:///src/app/authentification/services/basic-auth-htpp-interceptor.service.ts","webpack:///src/app/category/category-routing.module.ts","webpack:///src/app/category/category.module.ts","webpack:///src/app/category/components/category-form/category-form.component.ts","webpack:///src/app/category/components/category-form/category-form.component.html","webpack:///src/app/category/components/category-item/category-item.component.ts","webpack:///src/app/category/components/category-item/category-item.component.html","webpack:///src/app/category/components/category-list/category-list.component.ts","webpack:///src/app/category/components/category-list/category-list.component.html","webpack:///src/app/category/model/category.ts","webpack:///src/app/category/service/category.service.ts","webpack:///src/app/mouvement/components/mouvement-form/mouvement-form.component.ts","webpack:///src/app/mouvement/components/mouvement-form/mouvement-form.component.html","webpack:///src/app/mouvement/components/mouvement-list/mouvement-list.component.ts","webpack:///src/app/mouvement/components/mouvement-list/mouvement-list.component.html","webpack:///src/app/mouvement/model/mouvement.ts","webpack:///src/app/mouvement/mouvement-routing.module.ts","webpack:///src/app/mouvement/mouvement.module.ts","webpack:///src/app/mouvement/service/mouvement.service.ts","webpack:///src/app/product/components/product-form/product-form.component.ts","webpack:///src/app/product/components/product-form/product-form.component.html","webpack:///src/app/product/components/product-item/product-item.component.ts","webpack:///src/app/product/components/product-item/product-item.component.html","webpack:///src/app/product/components/product-list/product-list.component.ts","webpack:///src/app/product/components/product-list/product-list.component.html","webpack:///src/app/product/components/product-stock-list/product-stock-list.component.ts","webpack:///src/app/product/components/product-stock-list/product-stock-list.component.html","webpack:///src/app/product/model/product.ts","webpack:///src/app/product/product-routing.module.ts","webpack:///src/app/product/product.module.ts","webpack:///src/app/product/service/product.service.ts","webpack:///src/app/provider/components/provider-form/provider-form.component.ts","webpack:///src/app/provider/components/provider-form/provider-form.component.html","webpack:///src/app/provider/components/provider-item/provider-item.component.ts","webpack:///src/app/provider/components/provider-item/provider-item.component.html","webpack:///src/app/provider/components/provider-list/provider-list.component.ts","webpack:///src/app/provider/components/provider-list/provider-list.component.html","webpack:///src/app/provider/model/provider.ts","webpack:///src/app/provider/provider-routing.module.ts","webpack:///src/app/provider/provider.module.ts","webpack:///src/app/provider/service/provider.service.ts","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/stock/components/stock-form/stock-form.component.ts","webpack:///src/app/stock/components/stock-form/stock-form.component.html","webpack:///src/app/stock/components/stock-list/stock-list.component.ts","webpack:///src/app/stock/components/stock-list/stock-list.component.html","webpack:///src/app/stock/model/stock.ts","webpack:///src/app/stock/service/stock.service.ts","webpack:///src/app/stock/stock-routing.module.ts","webpack:///src/app/stock/stock.module.ts","webpack:///src/app/unit/components/unit-form/unit-form.component.ts","webpack:///src/app/unit/components/unit-form/unit-form.component.html","webpack:///src/app/unit/components/unit-item/unit-item.component.ts","webpack:///src/app/unit/components/unit-item/unit-item.component.html","webpack:///src/app/unit/components/unit-list/unit-list.component.ts","webpack:///src/app/unit/components/unit-list/unit-list.component.html","webpack:///src/app/unit/model/unit.ts","webpack:///src/app/unit/service/unit.service.ts","webpack:///src/app/unit/unit-routing.module.ts","webpack:///src/app/unit/unit.module.ts","webpack:///src/app/user/components/user-form/user-form.component.ts","webpack:///src/app/user/components/user-form/user-form.component.html","webpack:///src/app/user/components/user-item/user-item.component.ts","webpack:///src/app/user/components/user-item/user-item.component.html","webpack:///src/app/user/components/user-list/user-list.component.ts","webpack:///src/app/user/components/user-list/user-list.component.html","webpack:///src/app/user/service/user.service.ts","webpack:///src/app/user/user-routing.module.ts","webpack:///src/app/user/user.module.ts","webpack:///src/app/warehouse/components/warehouse-form/warehouse-form.component.ts","webpack:///src/app/warehouse/components/warehouse-form/warehouse-form.component.html","webpack:///src/app/warehouse/components/warehouse-item/warehouse-item.component.ts","webpack:///src/app/warehouse/components/warehouse-item/warehouse-item.component.html","webpack:///src/app/warehouse/components/warehouse-list/warehouse-list.component.ts","webpack:///src/app/warehouse/components/warehouse-list/warehouse-list.component.html","webpack:///src/app/warehouse/model/warehouse.ts","webpack:///src/app/warehouse/service/warehouse.service.ts","webpack:///src/app/warehouse/warehouse-routing.module.ts","webpack:///src/app/warehouse/warehouse.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthentificationRoutingModule","forChild","AuthentificationModule","LoginComponent","router","loginservice","loginInvalid","form","username","required","password","console","log","value","authenticate","subscribe","data","role","navigate","error","get","checkLogin","AuthGaurdService","authService","route","state","isUserLoggedIn","providedIn","AuthentificationService","httpClient","headers","Authorization","btoa","pipe","userData","sessionStorage","setItem","authString","user","getItem","removeItem","BasicAuthHtppInterceptorService","next","clone","setHeaders","handle","CategoryRoutingModule","CategoryModule","CategoryFormComponent","categoryService","category","categoryForm","save","result","gotoCategoryList","designation","description","nullValidator","onSubmit","CategoryItemComponent","codeId","snapshot","params","findCategory","setValue","update","gotoCurrencyList","reset","CategoryListComponent","displayedColumns","dataSource","categories","event","filterValue","target","filter","trim","toLowerCase","findAll","applyFilter","Category","CategoryService","http","categoryUrl","post","put","MouvementFormComponent","mouvementService","productService","providerService","stockService","mouvement","file","files","mouvementForm","produit","fournisseur","prixAchat","quantiteEnStock","quantite","gotoMouvementList","type","stock","products","stocks","MouvementListComponent","mouvements","paginator","Mouvement","MouvementRoutingModule","MouvementModule","MouvementService","mouvementUrl","ProductFormComponent","warehouseService","unitService","stateCtrl","product","productForm","gotoProductList","identifiant","nom","categorie","uniteDeMesure","quantiteMin","units","ProductItemComponent","ProductListComponent","produits","ProductStockListComponent","findFullProducts","Product","ProductRoutingModule","ProductModule","ProductService","productUrl","ProviderFormComponent","provider","providerForm","adresse","telephone","ProviderItemComponent","findProvider","gotoProviderList","ProviderListComponent","Provider","ProviderRoutingModule","ProviderModule","ProviderService","providerUrl","HeaderComponent","authentificationService","toggleSideBarForMe","logOut","emit","setTimeout","window","dispatchEvent","Event","toggleSideBar","SharedModule","StockFormComponent","stockForm","gotoStockList","fax","emplacement","findWarehousesWithoutStock","warehouses","StockListComponent","Stock","StockService","stockUrl","StockRoutingModule","StockModule","UnitFormComponent","unit","unitForm","gotoUnitList","UnitItemComponent","findUnit","UnitListComponent","Unit","UnitService","unitUrl","unitUrl2","UnitRoutingModule","UnitModule","UserFormComponent","userService","userForm","prenom","cin","email","gotoUserList","UserItemComponent","findUser","UserListComponent","users","UserService","userUrl","UserRoutingModule","UserModule","WarehouseFormComponent","warehouse","warehouseForm","gotoWarehouseList","WarehouseItemComponent","findWarehouse","WarehouseListComponent","Warehouse","WarehouseService","warehouseUrl","WarehouseRoutingModule","WarehouseModule","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductListComponent } from './product/components/product-list/product-list.component';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { ProductFormComponent } from './product/components/product-form/product-form.component';\nimport { ProductModule } from './product/product.module';\nimport { CategoryListComponent } from './category/components/category-list/category-list.component';\nimport { UnitListComponent } from './unit/components/unit-list/unit-list.component';\nimport { ProviderListComponent } from './provider/components/provider-list/provider-list.component';\nimport { WarehouseListComponent } from './warehouse/components/warehouse-list/warehouse-list.component';\nimport { LoginComponent } from './authentification/components/login/login.component';\nimport { AuthGaurdService } from './authentification/services/auth-gaurd.service';\nimport { UserListComponent } from './user/components/user-list/user-list.component';\nimport { StockListComponent } from './stock/components/stock-list/stock-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full',\n  },\n  {\n    path: 'products',\n    component: ProductListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'categories',\n    component: CategoryListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'stocks',\n    component: StockListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'units',\n    component: UnitListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'providers',\n    component: ProviderListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'warehouses',\n    component: WarehouseListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'users',\n    component: UserListComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gestionDeStock';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ProductModule } from './product/product.module';\nimport { CategoryModule } from './category/category.module';\nimport { UnitModule } from './unit/unit.module';\nimport { ProviderModule } from './provider/provider.module';\nimport { Warehouse } from './warehouse/model/warehouse';\nimport { WarehouseModule } from './warehouse/warehouse.module';\nimport { UserModule } from './user/user.module';\nimport { AuthentificationModule } from './authentification/authentification.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BasicAuthHtppInterceptorService } from './authentification/services/basic-auth-htpp-interceptor.service';\nimport { StockModule } from './stock/stock.module';\nimport { MouvementModule } from './mouvement/mouvement.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ProductModule,\n    CategoryModule,\n    UnitModule,\n    ProviderModule,\n    WarehouseModule,\n    UserModule,\n    AuthentificationModule,\n    StockModule,\n    MouvementModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BasicAuthHtppInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthentificationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthentificationRoutingModule } from './authentification-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [CommonModule, AuthentificationRoutingModule, SharedModule],\n})\nexport class AuthentificationModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthentificationService } from '../../services/authentification.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n\n  loginInvalid = false;\n\n  constructor(\n    private router: Router,\n    private loginservice: AuthentificationService\n  ) {}\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n    });\n  }\n  get username() {\n    return this.form.get('username');\n  }\n  get password() {\n    return this.form.get('password');\n  }\n\n  checkLogin() {\n    console.log(this.username.value);\n    this.loginservice\n      .authenticate(this.username.value, this.password.value)\n      .subscribe(\n        (data) => {\n          if (data.role == 'User') {\n            this.router.navigate(['/products']);\n          } else {\n            this.router.navigate(['/categories']);\n          }\n          this.loginInvalid = false;\n        },\n        (error) => {\n          this.loginInvalid = true;\n        }\n      );\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <form [formGroup]=\"form\" (ngSubmit)=\"checkLogin()\">\n      <h2>Log In</h2>\n\n      <mat-error *ngIf=\"loginInvalid\">\n        The username and password were not recognised\n      </mat-error>\n\n      <mat-form-field class=\"full-width-input\">\n        <input\n          matInput\n          placeholder=\"Username\"\n          formControlName=\"username\"\n          required\n        />\n\n        <mat-error>\n          Please provide a username\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width-input\">\n        <input\n          matInput\n          type=\"password\"\n          placeholder=\"Password\"\n          formControlName=\"password\"\n          required\n        />\n\n        <mat-error>\n          Please provide a password\n        </mat-error>\n      </mat-form-field>\n\n      <button mat-raised-button color=\"primary\">Login</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { AuthentificationService } from './authentification.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGaurdService implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthentificationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserLoggedIn()) return true;\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { User } from 'src/app/user/model/user';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthentificationService {\n  constructor(private httpClient: HttpClient) {}\n\n  authenticate(username, password) {\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.httpClient\n      .get<User>('http://localhost:8081/utilisateur/' + username, { headers })\n      .pipe(\n        map((userData) => {\n          sessionStorage.setItem('username', username);\n          console.log(userData.role);\n          sessionStorage.setItem('role', userData.role);\n\n          let authString = 'Basic ' + btoa(username + ':' + password);\n          sessionStorage.setItem('basicauth', authString);\n          return userData;\n        })\n      );\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('username');\n    console.log(!(user === null));\n    return !(user === null);\n  }\n\n  logOut() {\n    sessionStorage.removeItem('username');\n    sessionStorage.removeItem('role');\n    sessionStorage.removeItem('basicauth');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BasicAuthHtppInterceptorService implements HttpInterceptor {\n  constructor() {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    if (\n      sessionStorage.getItem('username') &&\n      sessionStorage.getItem('basicauth')\n    ) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: sessionStorage.getItem('basicauth'),\n        },\n      });\n    }\n\n    return next.handle(req);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CategoryListComponent } from './components/category-list/category-list.component';\nimport { CategoryFormComponent } from './components/category-form/category-form.component';\nimport { CategoryItemComponent } from './components/category-item/category-item.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\n\nconst routes: Routes = [\n  {\n    path: 'categoryForm',\n    component: CategoryFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n\n  {\n    path: 'category/:id',\n    component: CategoryItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CategoryRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoryRoutingModule } from './category-routing.module';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { CategoryListComponent } from './components/category-list/category-list.component';\nimport { CategoryFormComponent } from './components/category-form/category-form.component';\nimport { CategoryItemComponent } from './components/category-item/category-item.component';\n\n@NgModule({\n  declarations: [CategoryListComponent, CategoryFormComponent, CategoryItemComponent],\n  imports: [CommonModule, CategoryRoutingModule, SharedModule],\n})\nexport class CategoryModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CategoryService } from '../../service/category.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Category } from '../../model/category';\n\n@Component({\n  selector: 'app-category-form',\n  templateUrl: './category-form.component.html',\n  styleUrls: ['./category-form.component.css'],\n})\nexport class CategoryFormComponent implements OnInit {\n  categoryForm: FormGroup;\n  category: Category;\n\n  get id() {\n    return this.categoryForm.get('id');\n  }\n  get designation() {\n    return this.categoryForm.get('designation');\n  }\n  get description() {\n    return this.categoryForm.get('description');\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private categoryService: CategoryService\n  ) {\n    this.category = new Category();\n  }\n  onSubmit() {\n    this.category = this.categoryForm.value;\n    this.categoryService\n      .save(this.category)\n      .subscribe((result) => this.gotoCategoryList());\n  }\n\n  gotoCategoryList() {\n    this.router.navigate(['/categories']);\n  }\n\n  ngOnInit(): void {\n    this.categoryForm = new FormGroup({\n      designation: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"categoryForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Catégorie / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!categoryForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/categories\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de la catégorie</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile rowspan=\"2\"> </mat-grid-tile>\n\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field id=\"description\">\n          <mat-label>Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CategoryService } from '../../service/category.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Category } from '../../model/category';\n\n@Component({\n  selector: 'app-category-item',\n  templateUrl: './category-item.component.html',\n  styleUrls: ['./category-item.component.css'],\n})\nexport class CategoryItemComponent implements OnInit {\n  codeId: string;\n  categoryForm: FormGroup;\n  category: Category;\n  get designation() {\n    return this.categoryForm.get('designation');\n  }\n\n  get description() {\n    return this.categoryForm.get('description');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private categoryService: CategoryService\n  ) {\n    this.category = new Category();\n  }\n  ngOnInit(): void {\n    this.categoryForm = new FormGroup({\n      designation: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n    });\n    this.codeId = this.route.snapshot.params['id'];\n    this.categoryService.findCategory(this.codeId).subscribe(\n      (data) => {\n        this.category = data[0];\n        console.log(this.category);\n        this.designation.setValue(this.category.designation);\n        this.description.setValue(this.category.description);\n      },\n      (error) => console.log('error')\n    );\n  }\n\n  onSubmit() {\n    this.category = this.categoryForm.value;\n    this.categoryService\n      .update(this.codeId, this.category)\n      .subscribe((result) => this.gotoCurrencyList());\n  }\n\n  gotoCurrencyList() {\n    this.router.navigate(['/categories']);\n  }\n\n  reset() {\n    this.categoryForm.reset();\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"categoryForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Catégorie / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!categoryForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/categories\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de la catégorie</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile rowspan=\"2\"> </mat-grid-tile>\n\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field id=\"description\">\n          <mat-label>Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Category } from '../../model/category';\nimport { CategoryService } from '../../service/category.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css'],\n})\nexport class CategoryListComponent implements OnInit {\n  categories: Category[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = ['id', 'designation', 'description', 'actions'];\n  dataSource = new MatTableDataSource<Category>(this.categories);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private categoryService: CategoryService,\n    private route: Router\n  ) {}\n  deleteCategory(id: number) {\n    this.categoryService.delete(id).subscribe(\n      (data) => {\n        console.log(data);\n        this.categoryService.findAll().subscribe(\n          (data) => {\n            this.categories = data;\n            this.dataSource = new MatTableDataSource<Category>(this.categories);\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Category>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.categoryService.findAll().subscribe(\n      (data) => {\n        this.categories = data;\n        this.dataSource = new MatTableDataSource<Category>(this.categories);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Category>(null);\n      }\n    );\n  }\n  goToCategoryItem(code: string) {\n    this.route.navigate(['/category/' + code]);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Catégories</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/categoryForm\">\n            CREER\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"designation\">\n      <th mat-header-cell *matHeaderCellDef>Designation</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.designation }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteCategory(element.id)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToCategoryItem(element.id)\"\n        >\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","export class Category {\n  id: number;\n  designation: string;\n  description: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Category } from '../model/category';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  private categoryUrl: string;\n  constructor(private http: HttpClient) {\n    this.categoryUrl = 'http://localhost:8081/categorie';\n  }\n  public findAll(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.categoryUrl + 's');\n  }\n  public findCategory(id: string): Observable<Category[]> {\n    return this.http.get<Category[]>(this.categoryUrl + 's?id=' + id);\n  }\n\n  public save(category: Category) {\n    return this.http.post<Category>(this.categoryUrl, category);\n  }\n  public delete(id: number): Observable<any> {\n    return this.http.delete(`${this.categoryUrl}/${id}`);\n  }\n\n  public update(id: string, category: Category): Observable<any> {\n    return this.http.put(`${this.categoryUrl}/${id}`, category);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Mouvement } from '../../model/mouvement';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { ProductService } from 'src/app/product/service/product.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MouvementService } from '../../service/mouvement.service';\nimport { WarehouseService } from 'src/app/warehouse/service/warehouse.service';\nimport { Product } from 'src/app/product/model/product';\nimport { Warehouse } from 'src/app/warehouse/model/warehouse';\nimport { ProviderService } from 'src/app/provider/service/provider.service';\nimport { Provider } from 'src/app/provider/model/provider';\nimport { Stock } from 'src/app/stock/model/stock';\nimport { StockService } from 'src/app/stock/service/stock.service';\n\n@Component({\n  selector: 'app-mouvement-form',\n  templateUrl: './mouvement-form.component.html',\n  styleUrls: ['./mouvement-form.component.css'],\n})\nexport class MouvementFormComponent implements OnInit {\n  mouvementForm: FormGroup;\n  mouvement: Mouvement;\n  products: Product[];\n  stocks: Stock[];\n  providers: Provider[];\n\n  get id() {\n    return this.mouvementForm.get('id');\n  }\n\n  get description() {\n    return this.mouvementForm.get('description');\n  }\n  get type() {\n    return this.mouvementForm.get('type');\n  }\n\n  get quantite() {\n    return this.mouvementForm.get('quantite');\n  }\n\n  get fournisseur() {\n    return this.mouvementForm.get('fournisseur');\n  }\n\n  get emplacement() {\n    return this.mouvementForm.get('emplacement');\n  }\n  get prixAchat() {\n    return this.mouvementForm.get('prixAchat');\n  }\n\n  onFileChanged(event) {\n    const file = event.target.files[0];\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private mouvementService: MouvementService,\n    private productService: ProductService,\n    private providerService: ProviderService,\n    private stockService: StockService\n  ) {\n    this.mouvement = new Mouvement();\n  }\n  onSubmit() {\n    this.mouvement = this.mouvementForm.value;\n    this.mouvement.produit.fournisseur = this.fournisseur.value;\n    this.mouvement.produit.prixAchat = this.prixAchat.value;\n    this.mouvement.produit.description = this.description.value;\n    this.mouvement.produit.quantiteEnStock = this.quantite.value;\n\n    console.log(this.mouvement);\n    this.mouvementService\n      .save(this.mouvement)\n      .subscribe((result) => this.gotoMouvementList());\n  }\n\n  gotoMouvementList() {\n    this.router.navigate(['/mouvements']);\n  }\n\n  ngOnInit(): void {\n    this.mouvementForm = new FormGroup({\n      id: new FormControl('', Validators.nullValidator),\n      type: new FormControl('', Validators.required),\n      produit: new FormControl('', Validators.required),\n      quantite: new FormControl('', Validators.required),\n      fournisseur: new FormControl('', Validators.required),\n      stock: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n      prixAchat: new FormControl('', Validators.required),\n    });\n    this.productService.findAll().subscribe((data) => {\n      this.products = data;\n    });\n    this.stockService.findAll().subscribe((data) => {\n      this.stocks = data;\n    });\n    this.providerService.findAll().subscribe((data) => {\n      this.providers = data;\n    });\n  }\n}\n","<app-header></app-header>\r\n<form [formGroup]=\"mouvementForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"borderBottom\">\r\n    <div class=\"container\">\r\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\r\n        <mat-grid-tile>\r\n          <div fxFlex fxLayoutAlign=\"start center\">\r\n            <h3>Mouvements / <span id=\"New\">Nouveau</span></h3>\r\n          </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile> </mat-grid-tile>\r\n        <mat-grid-tile>\r\n          <div fxFlex fxLayoutAlign=\"start center\">\r\n            <button\r\n              mat-button\r\n              class=\"blueButton\"\r\n              type=\"submit\"\r\n              [disabled]=\"!mouvementForm.valid\"\r\n            >\r\n              Ajouter\r\n            </button>\r\n            <button mat-button class=\"importer\" routerLink=\"/mouvements\">\r\n              Annuler\r\n            </button>\r\n          </div>\r\n        </mat-grid-tile>\r\n      </mat-grid-list>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container content\">\r\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Produit</mat-label>\r\n          <mat-select disableRipple formControlName=\"produit\">\r\n            <mat-option *ngFor=\"let product of products\" [value]=\"product\">\r\n              {{ product.nom }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n      <mat-grid-tile></mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Type</mat-label>\r\n          <mat-select disableRipple formControlName=\"type\">\r\n            <mat-option value=\"Entree\">Entree</mat-option>\r\n            <mat-option value=\"Sortie\">Sortie</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Fournisseur</mat-label>\r\n          <mat-select disableRipple formControlName=\"fournisseur\">\r\n            <mat-option *ngFor=\"let provider of providers\" [value]=\"provider\">\r\n              {{ provider.nom }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Entropot</mat-label>\r\n          <mat-select disableRipple formControlName=\"stock\">\r\n            <mat-option *ngFor=\"let stock of stocks\" [value]=\"stock\">\r\n              {{ stock.emplacement.designation }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Quantite</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"quantite\" />\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field class=\"formField\">\r\n          <mat-label>Prix d'achat</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"prixAchat\" />\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile colspan=\"2\">\r\n        <mat-form-field id=\"description\">\r\n          <mat-label>Description</mat-label>\r\n          <textarea matInput></textarea>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Mouvement } from '../../model/mouvement';\nimport { MouvementService } from '../../service/mouvement.service';\nimport { Router } from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-mouvement-list',\n  templateUrl: './mouvement-list.component.html',\n  styleUrls: ['./mouvement-list.component.css'],\n})\nexport class MouvementListComponent implements OnInit {\n  mouvements: Mouvement[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'id',\n    'produit',\n    'type',\n    'quantite',\n    'emplacement',\n    'prixAchat',\n    'date',\n  ];\n  dataSource = new MatTableDataSource<Mouvement>(this.mouvements);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private mouvementService: MouvementService,\n    private route: Router\n  ) {}\n\n  ngOnInit() {\n    this.mouvementService.findAll().subscribe(\n      (data) => {\n        this.mouvements = data;\n        this.dataSource = new MatTableDataSource<Mouvement>(this.mouvements);\n        this.dataSource.paginator = this.paginator;\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Mouvement>(null);\n      }\n    );\n  }\n  goToMouvementItem(code: string) {\n    this.route.navigate(['/mouvement/' + code]);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Mouvements</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/mouvementForm\">\n            Creer\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"produit\">\n      <th mat-header-cell *matHeaderCellDef>Produit</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.produit.nom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"type\">\n      <th mat-header-cell *matHeaderCellDef>Type</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef>Date</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.date }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"prixAchat\">\n      <th mat-header-cell *matHeaderCellDef>Prix Achat</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.produit.prixAchat }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"quantite\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.quantite }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"emplacement\">\n      <th mat-header-cell *matHeaderCellDef>Emplacement</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.stock.emplacement.designation }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <p>...</p>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","import { Product } from 'src/app/product/model/product';\nimport { Stock } from 'src/app/stock/model/stock';\nimport { Warehouse } from 'src/app/warehouse/model/warehouse';\n\nexport class Mouvement {\n  produit: Product;\n  type: string;\n  stock: Stock;\n  quantite: number;\n  date: Date;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MouvementFormComponent } from './components/mouvement-form/mouvement-form.component';\n\nconst routes: Routes = [\n  {\n    path: 'mouvementForm',\n    component: MouvementFormComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MouvementRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MouvementRoutingModule } from './mouvement-routing.module';\nimport { MouvementListComponent } from './components/mouvement-list/mouvement-list.component';\nimport { MouvementFormComponent } from './components/mouvement-form/mouvement-form.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [MouvementListComponent, MouvementFormComponent],\n  imports: [CommonModule, MouvementRoutingModule, SharedModule],\n})\nexport class MouvementModule {}\n","import { Injectable } from '@angular/core';\nimport { Mouvement } from '../model/mouvement';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MouvementService {\n  private mouvementUrl: string;\n  constructor(private http: HttpClient) {\n    this.mouvementUrl = 'http://localhost:8081/mouvement';\n  }\n  public findAll(): Observable<Mouvement[]> {\n    return this.http.get<Mouvement[]>(this.mouvementUrl + 's');\n  }\n  public findMouvement(id: string): Observable<Mouvement[]> {\n    return this.http.get<Mouvement[]>(this.mouvementUrl + 's?id=' + id);\n  }\n\n  public save(mouvement: Mouvement) {\n    return this.http.post<Mouvement>(this.mouvementUrl, mouvement);\n  }\n  // public delete(id: number): Observable<any> {\n  //   return this.http.delete(`${this.mouvementUrl}/${id}`);\n  // }\n\n  // public update(id: string, mouvement: Mouvement): Observable<any> {\n  //   return this.http.put(`${this.mouvementUrl}/${id}`, mouvement);\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ProductService } from '../../service/product.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from '../../model/product';\nimport { ProviderService } from 'src/app/provider/service/provider.service';\nimport { WarehouseService } from 'src/app/warehouse/service/warehouse.service';\nimport { UnitService } from 'src/app/unit/service/unit.service';\nimport { CategoryService } from 'src/app/category/service/category.service';\nimport { Provider } from 'src/app/provider/model/provider';\nimport { Category } from 'src/app/category/model/category';\nimport { Warehouse } from 'src/app/warehouse/model/warehouse';\nimport { Unit } from 'src/app/unit/model/unit';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css'],\n})\nexport class ProductFormComponent implements OnInit {\n  productForm: FormGroup;\n  product: Product;\n  providers: Provider[];\n  stateCtrl = new FormControl();\n  filteredStates: Observable<Provider[]>;\n  categories: Category[];\n  warehouses: Warehouse[];\n  units: Unit[];\n\n  get identifiant() {\n    return this.productForm.get('identifiant');\n  }\n  get nom() {\n    return this.productForm.get('nom');\n  }\n  get description() {\n    return this.productForm.get('description');\n  }\n  get type() {\n    return this.productForm.get('type');\n  }\n  get quantiteDisponible() {\n    return this.productForm.get('quantiteDisponible');\n  }\n  get categorie() {\n    return this.productForm.get('categorie');\n  }\n  get fournisseur() {\n    return this.productForm.get('fournisseur');\n  }\n  get uniteDeMesure() {\n    return this.productForm.get('uniteDeMesure');\n  }\n  get emplacement() {\n    return this.productForm.get('emplacement');\n  }\n  get prixAchat() {\n    return this.productForm.get('prixAchat');\n  }\n  get quantiteMin() {\n    return this.productForm.get('quantiteMin');\n  }\n\n  onFileChanged(event) {\n    const file = event.target.files[0];\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService,\n    private providerService: ProviderService,\n    private warehouseService: WarehouseService,\n    private unitService: UnitService,\n    private categoryService: CategoryService\n  ) {\n    this.product = new Product();\n  }\n  onSubmit() {\n    this.product = this.productForm.value;\n    this.productService\n      .save(this.product)\n      .subscribe((result) => this.gotoProductList());\n  }\n\n  gotoProductList() {\n    this.router.navigate(['/products']);\n  }\n\n  ngOnInit(): void {\n    this.productForm = new FormGroup({\n      identifiant: new FormControl('', Validators.nullValidator),\n      nom: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n      type: new FormControl('', Validators.required),\n      categorie: new FormControl('', Validators.required),\n      uniteDeMesure: new FormControl('', Validators.required),\n      quantiteMin: new FormControl('', Validators.required),\n    });\n\n    this.categoryService.findAll().subscribe((data) => {\n      this.categories = data;\n    });\n    this.unitService.findAll().subscribe((data) => {\n      this.units = data;\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Produits / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!productForm.valid\"\n            >\n              Ajouter\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/products\">\n              Annuler\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom produit</mat-label>\n          <input matInput type=\"text\" formControlName=\"nom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile rowspan=\"2\"> </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Type</mat-label>\n          <mat-select disableRipple formControlName=\"type\">\n            <mat-option value=\"Service\">Service</mat-option>\n            <mat-option value=\"Consommable\">Consommable</mat-option>\n            <mat-option value=\"Article stockable\">Article stockable</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Regle de réapprovisionnement</mat-label>\n          <input matInput type=\"text\" formControlName=\"quantiteMin\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile\n        ><mat-form-field class=\"formField\">\n          <mat-label>Catégorie</mat-label>\n          <mat-select disableRipple formControlName=\"categorie\">\n            <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n              {{ category.designation }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field></mat-grid-tile\n      >\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Unite de mesure</mat-label>\n          <mat-select disableRipple formControlName=\"uniteDeMesure\">\n            <mat-option *ngFor=\"let unit of units\" [value]=\"unit\">\n              {{ unit.designation }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field id=\"description\">\n          <mat-label>Description</mat-label>\n          <textarea matInput></textarea>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.css']\n})\nexport class ProductItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>product-item works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Product } from '../../model/product';\nimport { ProductService } from '../../service/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n})\nexport class ProductListComponent implements OnInit {\n  produits: Product[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'identifiant',\n    'nom',\n    'categorie',\n    'typeDeProduit',\n    'quantiteDisponible',\n    'uniteDeMesure',\n    'description',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource<Product>(this.produits);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(private productService: ProductService) {}\n\n  deleteProduct(id: string) {\n    this.productService.delete(id).subscribe(\n      (data) => {\n        this.productService.findAll().subscribe(\n          (data) => {\n            this.produits = data;\n            this.dataSource = new MatTableDataSource<Product>(this.produits);\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Product>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.productService.findAll().subscribe(\n      (data) => {\n        this.produits = data;\n        this.dataSource = new MatTableDataSource<Product>(this.produits);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Product>(null);\n      }\n    );\n  }\n}\n","<app-header></app-header>\n<div class=\"bottomBorder\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Produits</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/productForm\">\n            Creer\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"identifiant\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"nom\">\n      <th mat-header-cell *matHeaderCellDef>Nom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"categorie\">\n      <th mat-header-cell *matHeaderCellDef>Categorie</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.categorie.designation }}\n      </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"typeDeProduit\">\n      <th mat-header-cell *matHeaderCellDef>Type De Produit</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"quantiteDisponible\">\n      <th mat-header-cell *matHeaderCellDef>Quantite disponible</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.quantiteTotale }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"uniteDeMesure\">\n      <th mat-header-cell *matHeaderCellDef>Unite de mesure</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.uniteDeMesure.designation }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteProduct(element.id)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Product } from '../../model/product';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ProductService } from '../../service/product.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-stock-list',\n  templateUrl: './product-stock-list.component.html',\n  styleUrls: ['./product-stock-list.component.css'],\n})\nexport class ProductStockListComponent implements OnInit {\n  produits: Product[];\n  codeId: string;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'identifiant',\n    'nom',\n    'categorie',\n    'typeDeProduit',\n    'emplacement',\n    'prixAchat',\n    'fournisseur',\n    'quantiteEnStock',\n    'uniteDeMesure',\n    'description',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource<Product>(this.produits);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private productService: ProductService,\n    private route: ActivatedRoute\n  ) {}\n\n  deleteProduct(id: string) {\n    this.productService.delete(id).subscribe(\n      (data) => {\n        this.productService.findFullProducts(this.codeId).subscribe(\n          (data) => {\n            this.produits = data;\n            this.dataSource = new MatTableDataSource<Product>(this.produits);\n          },\n          (error) => {\n            Product;\n            this.dataSource = new MatTableDataSource<Product>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.codeId = this.route.snapshot.params['id'];\n    this.productService.findFullProducts(this.codeId).subscribe(\n      (data) => {\n        this.produits = data;\n        this.dataSource = new MatTableDataSource<Product>(this.produits);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Product>(null);\n      }\n    );\n  }\n  enRupture(produit: Product) {\n    console.log(produit.quantiteMin + ':' + produit.quantiteEnStock);\n    if (produit.quantiteMin > produit.quantiteEnStock) {\n      return true;\n    }\n    return false;\n  }\n}\n","<app-header></app-header>\n<div class=\"bottomBorder\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Produits</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/productForm\">\n            Creer\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"identifiant\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"nom\">\n      <th mat-header-cell *matHeaderCellDef>Nom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"categorie\">\n      <th mat-header-cell *matHeaderCellDef>Categorie</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.categorie.designation }}\n      </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"typeDeProduit\">\n      <th mat-header-cell *matHeaderCellDef>Type De Produit</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"quantiteEnStock\">\n      <th mat-header-cell *matHeaderCellDef>Quantite disponible</th>\n      <td\n        mat-cell\n        *matCellDef=\"let element\"\n        [ngClass]=\"{ rupture: enRupture(element) }\"\n      >\n        {{ element.quantiteEnStock }}\n        <span *ngIf=\"enRupture(element)\" class=\"rupture\">\n          (A REAPPROVISIONNER)\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fournisseur\">\n      <th mat-header-cell *matHeaderCellDef>fournisseur</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.fournisseur.nom }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"uniteDeMesure\">\n      <th mat-header-cell *matHeaderCellDef>Unite de mesure</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.uniteDeMesure.designation }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"emplacement\">\n      <th mat-header-cell *matHeaderCellDef>Emplacement</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.stock.emplacement.designation }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"prixAchat\">\n      <th mat-header-cell *matHeaderCellDef>Prix</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.prixAchat }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteProduct(element.id)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","import { Category } from 'src/app/category/model/category';\nimport { Unit } from 'src/app/unit/model/unit';\nimport { Warehouse } from 'src/app/warehouse/model/warehouse';\nimport { Provider } from 'src/app/provider/model/provider';\n\nexport class Product {\n  id: number;\n  nom: string;\n  description: string;\n  type: string;\n  prixAchat: number;\n  quantiteEnStock: number;\n  fournisseur: Provider;\n  categorie: Category;\n  emplacement: Warehouse;\n  uniteDeMesure: Unit;\n  quantiteTotale: number;\n  quantiteMin: number;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductFormComponent } from './components/product-form/product-form.component';\nimport { ProductItemComponent } from './components/product-item/product-item.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\nimport { ProductStockListComponent } from './components/product-stock-list/product-stock-list.component';\n\nconst routes: Routes = [\n  {\n    path: 'productForm',\n    component: ProductFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'productItem',\n    component: ProductItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'stock/:id/products',\n    component: ProductStockListComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProductRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductRoutingModule } from './product-routing.module';\nimport { ProductFormComponent } from './components/product-form/product-form.component';\nimport { ProductItemComponent } from './components/product-item/product-item.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductStockListComponent } from './components/product-stock-list/product-stock-list.component';\n\n@NgModule({\n  declarations: [\n    ProductFormComponent,\n    ProductListComponent,\n    ProductItemComponent,\n    ProductStockListComponent,\n  ],\n  imports: [CommonModule, ProductRoutingModule, SharedModule],\n})\nexport class ProductModule {}\n","import { Injectable } from '@angular/core';\nimport { Product } from '../model/product';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private productUrl: string;\n  constructor(private http: HttpClient) {\n    this.productUrl = 'http://localhost:8081/produit';\n  }\n  public findAll(): Observable<Product[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n\n    return this.http.get<Product[]>(this.productUrl + 's');\n  }\n  public findFullProducts(id: string): Observable<Product[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n\n    return this.http.get<Product[]>(\n      'http://localhost:8081/stock/' + id + '/produits'\n    );\n  }\n  public findProduct(code: string): Observable<Product[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.get<Product[]>(this.productUrl + 's?id=' + code);\n  }\n\n  public save(category: Product) {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.post<Product>(this.productUrl, category);\n  }\n  public delete(id: string): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.delete(`${this.productUrl}/${id}`);\n  }\n\n  public update(id: string, category: Product): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.put(`${this.productUrl}/${id}`, category);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Provider } from '../../model/provider';\nimport { ProviderService } from '../../service/provider.service';\n\n@Component({\n  selector: 'app-provider-form',\n  templateUrl: './provider-form.component.html',\n  styleUrls: ['./provider-form.component.css'],\n})\nexport class ProviderFormComponent implements OnInit {\n  providerForm: FormGroup;\n  provider: Provider;\n\n  get id() {\n    return this.providerForm.get('id');\n  }\n  get nom() {\n    return this.providerForm.get('nom');\n  }\n  get adresse() {\n    return this.providerForm.get('adresse');\n  }\n  get telephone() {\n    return this.providerForm.get('telephone');\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private providerService: ProviderService\n  ) {\n    this.provider = new Provider();\n  }\n  onSubmit() {\n    this.provider = this.providerForm.value;\n    this.providerService\n      .save(this.provider)\n      .subscribe((result) => this.gotoCategoryList());\n  }\n\n  gotoCategoryList() {\n    this.router.navigate(['/providers']);\n  }\n\n  ngOnInit(): void {\n    this.providerForm = new FormGroup({\n      nom: new FormControl('', Validators.required),\n      adresse: new FormControl('', Validators.nullValidator),\n      telephone: new FormControl('', Validators.nullValidator),\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"providerForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Fournisseurs / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!providerForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/providers\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom du fournisseur</mat-label>\n          <input matInput type=\"text\" formControlName=\"nom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Telephone</mat-label>\n          <input matInput type=\"text\" formControlName=\"telephone\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProviderService } from '../../service/provider.service';\nimport { Provider } from '../../model/provider';\n\n@Component({\n  selector: 'app-provider-item',\n  templateUrl: './provider-item.component.html',\n  styleUrls: ['./provider-item.component.css'],\n})\nexport class ProviderItemComponent implements OnInit {\n  codeId: string;\n  providerForm: FormGroup;\n  provider: Provider;\n  get nom() {\n    return this.providerForm.get('nom');\n  }\n\n  get adresse() {\n    return this.providerForm.get('adresse');\n  }\n\n  get telephone() {\n    return this.providerForm.get('telephone');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private providerService: ProviderService\n  ) {\n    this.provider = new Provider();\n  }\n  ngOnInit(): void {\n    this.providerForm = new FormGroup({\n      nom: new FormControl('', Validators.required),\n      adresse: new FormControl('', Validators.nullValidator),\n      telephone: new FormControl('', Validators.nullValidator),\n    });\n    this.codeId = this.route.snapshot.params['id'];\n    console.log(this.codeId);\n    this.providerService.findProvider(this.codeId).subscribe(\n      (data) => {\n        this.provider = data[0];\n        this.nom.setValue(this.provider.nom);\n        this.adresse.setValue(this.provider.adresse);\n        this.telephone.setValue(this.provider.telephone);\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  onSubmit() {\n    this.provider = this.providerForm.value;\n    this.providerService\n      .update(this.codeId, this.provider)\n      .subscribe((result) => this.gotoProviderList());\n  }\n\n  gotoProviderList() {\n    this.router.navigate(['/providers']);\n  }\n\n  reset() {\n    this.providerForm.reset();\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"providerForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Fournisseurs / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!providerForm.valid\"\n            >\n              Modifier\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/providers\">\n              Annuler\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom du fournisseur</mat-label>\n          <input matInput type=\"text\" formControlName=\"nom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile> </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Telephone</mat-label>\n          <input matInput type=\"text\" formControlName=\"telephone\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ProviderService } from '../../service/provider.service';\nimport { Provider } from '../../model/provider';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-provider-list',\n  templateUrl: './provider-list.component.html',\n  styleUrls: ['./provider-list.component.css'],\n})\nexport class ProviderListComponent implements OnInit {\n  providers: Provider[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'identifiant',\n    'nom',\n    'adresse',\n    'telephone',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource<Provider>(this.providers);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private providerService: ProviderService,\n    private route: Router\n  ) {}\n  deleteProvider(id: string) {\n    this.providerService.delete(id).subscribe(\n      (data) => {\n        console.log(data);\n        this.providerService.findAll().subscribe(\n          (data) => {\n            this.providers = data;\n            this.dataSource = new MatTableDataSource<Provider>(this.providers);\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Provider>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.providerService.findAll().subscribe(\n      (data) => {\n        this.providers = data;\n        this.dataSource = new MatTableDataSource<Provider>(this.providers);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Provider>(null);\n      }\n    );\n  }\n  goToProviderItem(code: string) {\n    this.route.navigate(['/provider/' + code]);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Fournisseurs</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/providerForm\">\n            CREER\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"identifiant\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"nom\">\n      <th mat-header-cell *matHeaderCellDef>Nom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"adresse\">\n      <th mat-header-cell *matHeaderCellDef>Adresse</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.adresse }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"telephone\">\n      <th mat-header-cell *matHeaderCellDef>Telephone</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.telephone }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteProvider(element.id)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToProviderItem(element.id)\"\n        >\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","export class Provider {\n  id: number;\n  nom: string;\n  adresse: string;\n  telephone: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProviderFormComponent } from './components/provider-form/provider-form.component';\nimport { ProviderItemComponent } from './components/provider-item/provider-item.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\n\nconst routes: Routes = [\n  {\n    path: 'providerForm',\n    component: ProviderFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'provider/:id',\n    component: ProviderItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProviderRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProviderRoutingModule } from './provider-routing.module';\nimport { ProviderListComponent } from './components/provider-list/provider-list.component';\nimport { ProviderFormComponent } from './components/provider-form/provider-form.component';\nimport { ProviderItemComponent } from './components/provider-item/provider-item.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    ProviderListComponent,\n    ProviderFormComponent,\n    ProviderItemComponent,\n  ],\n  imports: [CommonModule, ProviderRoutingModule, SharedModule],\n})\nexport class ProviderModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Provider } from '../model/provider';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProviderService {\n  private providerUrl: string;\n  constructor(private http: HttpClient) {\n    this.providerUrl = 'http://localhost:8081/fournisseur';\n  }\n  public findAll(): Observable<Provider[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n\n    return this.http.get<Provider[]>(this.providerUrl + 's');\n  }\n  public findProvider(code: string): Observable<Provider[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.get<Provider[]>(this.providerUrl + 's?id=' + code);\n  }\n\n  public save(category: Provider) {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.post<Provider>(this.providerUrl, category);\n  }\n  public delete(id: string): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.delete(`${this.providerUrl}/${id}`);\n  }\n\n  public update(id: string, category: Provider): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.put(`${this.providerUrl}/${id}`, category);\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthentificationService } from 'src/app/authentification/services/authentification.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  role: string;\n  @Output() toggleSideBarForMe: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private router: Router,\n    private authentificationService: AuthentificationService\n  ) {}\n\n  ngOnInit() {\n    this.role = sessionStorage.getItem('role');\n  }\n  logOut() {\n    this.authentificationService.logOut();\n    this.router.navigate(['']);\n  }\n  isUser() {\n    if (this.role === 'User') {\n      return true;\n    }\n    return false;\n  }\n  isAdmin() {\n    if (this.role === 'Admin') {\n      return true;\n    }\n    return false;\n  }\n  toggleSideBar() {\n    this.toggleSideBarForMe.emit();\n    setTimeout(() => {\n      window.dispatchEvent(new Event('resize'));\n    }, 300);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button (click)=\"toggleSideBar()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n\n    <span> gStock </span>\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"center\">\n      <button *ngIf=\"isUser()\" mat-button routerLink=\"/products\">\n        Produits\n      </button>\n      <button mat-button [matMenuTriggerFor]=\"config\">\n        Configuration\n      </button>\n      <mat-menu #config=\"matMenu\">\n        <button mat-menu-item routerLink=\"/categories\">Catégories</button>\n        <button mat-menu-item routerLink=\"/units\">Unités de mesure</button>\n        <button mat-menu-item routerLink=\"/providers\">\n          Fournisseurs\n        </button>\n        <button mat-menu-item routerLink=\"/warehouses\">Emplacements</button>\n        <button mat-menu-item routerLink=\"/users\">Employés</button>\n      </mat-menu>\n\n      <button mat-button [matMenuTriggerFor]=\"rapports\">\n        Rapports\n      </button>\n      <mat-menu #rapports=\"matMenu\">\n        <button mat-menu-item routerLink=\"/mouvements\">\n          Mouvements de stock\n        </button>\n\n        <button mat-menu-item routerLink=\"/stocks\">\n          Stock par emplacement\n        </button>\n      </mat-menu>\n    </div>\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\n      <ul fxLayout=\"row\" fxLayoutGap=\"20px\">\n        <li>\n          <button mat-icon-button>\n            <mat-icon>settings</mat-icon>\n          </button>\n        </li>\n        <li>\n          <button mat-icon-button>\n            <mat-icon>help_outline</mat-icon>\n          </button>\n        </li>\n        <li>\n          <button mat-button [matMenuTriggerFor]=\"signOut\">\n            <mat-icon>person_outline</mat-icon>\n          </button>\n          <mat-menu #signOut=\"matMenu\">\n            <button mat-menu-item (click)=\"logOut()\">\n              <mat-icon>exit_to_app</mat-icon>\n              Sign out\n            </button>\n          </mat-menu>\n        </li>\n      </ul>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { RouterModule } from '@angular/router';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HighchartsChartModule } from 'highcharts-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    RouterModule,\n    HighchartsChartModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  exports: [\n    HeaderComponent,\n    HttpClientModule,\n    CommonModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    RouterModule,\n    HighchartsChartModule,\n    FlexLayoutModule,\n  ],\n})\nexport class SharedModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Stock } from '../../model/stock';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { StockService } from '../../service/stock.service';\nimport { WarehouseService } from 'src/app/warehouse/service/warehouse.service';\nimport { Warehouse } from 'src/app/warehouse/model/warehouse';\n\n@Component({\n  selector: 'app-stock-form',\n  templateUrl: './stock-form.component.html',\n  styleUrls: ['./stock-form.component.css'],\n})\nexport class StockFormComponent implements OnInit {\n  stockForm: FormGroup;\n  stock: Stock;\n  warehouses: Warehouse[];\n\n  get id() {\n    return this.stockForm.get('id');\n  }\n  get telephone() {\n    return this.stockForm.get('telephone');\n  }\n  get fax() {\n    return this.stockForm.get('fax');\n  }\n\n  get emplacement() {\n    return this.stockForm.get('emplacement');\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private stockService: StockService,\n    private warehouseService: WarehouseService\n  ) {\n    this.stock = new Stock();\n  }\n  onSubmit() {\n    this.stock = this.stockForm.value;\n    this.stockService\n      .save(this.stock)\n      .subscribe((result) => this.gotoStockList());\n  }\n\n  gotoStockList() {\n    this.router.navigate(['/stocks']);\n  }\n\n  ngOnInit(): void {\n    this.stockForm = new FormGroup({\n      telephone: new FormControl('', Validators.required),\n      fax: new FormControl('', Validators.required),\n      emplacement: new FormControl('', Validators.required),\n    });\n    this.warehouseService.findWarehousesWithoutStock().subscribe((data) => {\n      this.warehouses = data;\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"stockForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Stocks / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!stockForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/stocks\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Entrepot</mat-label>\n          <mat-select disableRipple formControlName=\"emplacement\">\n            <mat-option\n              *ngFor=\"let warehouse of warehouses\"\n              [value]=\"warehouse\"\n            >\n              {{ warehouse.designation }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Telephone du stock</mat-label>\n          <input matInput type=\"text\" formControlName=\"telephone\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Fax</mat-label>\n          <input matInput type=\"text\" formControlName=\"fax\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Stock } from '../../model/stock';\nimport { StockService } from '../../service/stock.service';\nimport { Router } from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-stock-list',\n  templateUrl: './stock-list.component.html',\n  styleUrls: ['./stock-list.component.css'],\n})\nexport class StockListComponent implements OnInit {\n  stocks: Stock[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'identifiant',\n    'fax',\n    'telephone',\n    'emplacement',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource<Stock>(this.stocks);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(private stockService: StockService, private route: Router) {}\n  deleteStock(id: number) {\n    console.log(id);\n    this.stockService.delete(id).subscribe(\n      (data) => {\n        this.stockService.findAll().subscribe(\n          (data) => {\n            this.stocks = data;\n            this.dataSource = new MatTableDataSource<Stock>(this.stocks);\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Stock>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.stockService.findAll().subscribe(\n      (data) => {\n        this.stocks = data;\n        this.dataSource = new MatTableDataSource<Stock>(this.stocks);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Stock>(null);\n      }\n    );\n  }\n  goToProducts(code: string) {\n    this.route.navigate(['/stock/' + code + '/products']);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Stocks</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/stockForm\">\n            CREER\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"identifiant\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"telephone\">\n      <th mat-header-cell *matHeaderCellDef>Telephone</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.telephone }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fax\">\n      <th mat-header-cell *matHeaderCellDef>Fax</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.fax }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"emplacement\">\n      <th mat-header-cell *matHeaderCellDef>Emplacement</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.emplacement.designation }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" (click)=\"deleteStock(element.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToProducts(element.id)\"\n        >\n          <mat-icon>list</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","import { Warehouse } from 'src/app/warehouse/model/warehouse';\n\nexport class Stock {\n  id: number;\n  telephone: string;\n  fax: string;\n  emplacement: Warehouse;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Stock } from '../model/stock';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StockService {\n  private stockUrl: string;\n  constructor(private http: HttpClient) {\n    this.stockUrl = 'http://localhost:8081/stock';\n  }\n  public findAll(): Observable<Stock[]> {\n    return this.http.get<Stock[]>(this.stockUrl + 's');\n  }\n\n  public findStock(id: string): Observable<Stock[]> {\n    return this.http.get<Stock[]>(this.stockUrl + 's?id=' + id);\n  }\n\n  public save(category: Stock) {\n    return this.http.post<Stock>(this.stockUrl, category);\n  }\n  public delete(id: number): Observable<any> {\n    return this.http.delete(`${this.stockUrl}/${id}`);\n  }\n\n  public update(id: string, category: Stock): Observable<any> {\n    return this.http.put(`${this.stockUrl}/${id}`, category);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StockFormComponent } from './components/stock-form/stock-form.component';\nimport { StockListComponent } from './components/stock-list/stock-list.component';\n\nconst routes: Routes = [\n  {\n    path: 'stockForm',\n    component: StockFormComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StockRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StockRoutingModule } from './stock-routing.module';\nimport { StockListComponent } from './components/stock-list/stock-list.component';\nimport { StockFormComponent } from './components/stock-form/stock-form.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [StockListComponent, StockFormComponent],\n  imports: [CommonModule, StockRoutingModule, SharedModule],\n})\nexport class StockModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CategoryService } from 'src/app/category/service/category.service';\nimport { Unit } from '../../model/unit';\nimport { UnitService } from '../../service/unit.service';\n\n@Component({\n  selector: 'app-unit-form',\n  templateUrl: './unit-form.component.html',\n  styleUrls: ['./unit-form.component.css'],\n})\nexport class UnitFormComponent implements OnInit {\n  unitForm: FormGroup;\n  unit: Unit;\n\n  get nom() {\n    return this.unitForm.get('designation');\n  }\n  get description() {\n    return this.unitForm.get('description');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private unitService: UnitService\n  ) {\n    this.unit = new Unit();\n  }\n  onSubmit() {\n    this.unit = this.unitForm.value;\n    this.unitService.save(this.unit).subscribe((result) => this.gotoUnitList());\n  }\n\n  gotoUnitList() {\n    this.router.navigate(['/units']);\n  }\n\n  ngOnInit(): void {\n    this.unitForm = new FormGroup({\n      designation: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"unitForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Unités de mesure / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!unitForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/units\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de l'unité</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile rowspan=\"2\"> </mat-grid-tile>\n\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field id=\"description\">\n          <mat-label>Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Unit } from '../../model/unit';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UnitService } from '../../service/unit.service';\n\n@Component({\n  selector: 'app-unit-item',\n  templateUrl: './unit-item.component.html',\n  styleUrls: ['./unit-item.component.css'],\n})\nexport class UnitItemComponent implements OnInit {\n  codeId: string;\n  unitForm: FormGroup;\n  unit: Unit;\n  get designation() {\n    return this.unitForm.get('designation');\n  }\n\n  get description() {\n    return this.unitForm.get('description');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private unitService: UnitService\n  ) {\n    this.unit = new Unit();\n  }\n  ngOnInit(): void {\n    this.unitForm = new FormGroup({\n      designation: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n    });\n    this.codeId = this.route.snapshot.params['id'];\n    this.unitService.findUnit(this.codeId).subscribe(\n      (data) => {\n        this.unit = data[0];\n        this.designation.setValue(this.unit.designation);\n        this.description.setValue(this.unit.description);\n      },\n      (error) => console.log('error')\n    );\n  }\n\n  onSubmit() {\n    this.unit = this.unitForm.value;\n    this.unitService\n      .update(this.codeId, this.unit)\n      .subscribe((result) => this.gotoUnitList());\n  }\n\n  gotoUnitList() {\n    this.router.navigate(['/units']);\n  }\n\n  reset() {\n    this.unitForm.reset();\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"unitForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Unités de mesure / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!unitForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/units\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de l'unité</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile rowspan=\"2\"> </mat-grid-tile>\n\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field id=\"description\">\n          <mat-label>Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Unit } from '../../model/unit';\nimport { UnitService } from '../../service/unit.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-unit-list',\n  templateUrl: './unit-list.component.html',\n  styleUrls: ['./unit-list.component.css'],\n})\nexport class UnitListComponent implements OnInit {\n  units: Unit[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = ['id', 'designation', 'description', 'actions'];\n  dataSource = new MatTableDataSource<Unit>(this.units);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(private unitService: UnitService, private route: Router) {}\n  deleteUnit(id: string) {\n    this.unitService.delete(id).subscribe(\n      (data) => {\n        console.log(data);\n        this.unitService.findAll().subscribe(\n          (data) => {\n            this.units = data;\n            this.dataSource = new MatTableDataSource<Unit>(this.units);\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Unit>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.unitService.findAll().subscribe(\n      (data) => {\n        this.units = data;\n        this.dataSource = new MatTableDataSource<Unit>(this.units);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Unit>(null);\n      }\n    );\n  }\n  goToUnitItem(code: string) {\n    this.route.navigate(['/unit/' + code]);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Unités de mesure</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/unitForm\">\n            CREER\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"designation\">\n      <th mat-header-cell *matHeaderCellDef>Designation</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.designation }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" (click)=\"deleteUnit(element.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToUnitItem(element.id)\"\n        >\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","export class Unit {\n  id: number;\n  designation: string;\n  description: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Unit } from '../model/unit';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitService {\n  private unitUrl: string;\n  private unitUrl2: string;\n  constructor(private http: HttpClient) {\n    this.unitUrl = 'http://localhost:8081/unitesDeMesure';\n    this.unitUrl2 = 'http://localhost:8081/uniteDeMesure';\n  }\n  public findAll(): Observable<Unit[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n\n    return this.http.get<Unit[]>(this.unitUrl);\n  }\n  public findUnit(id: string): Observable<Unit[]> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.get<Unit[]>(this.unitUrl + '?id=' + id);\n  }\n\n  public save(unit: Unit) {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.post<Unit>(this.unitUrl2, unit);\n  }\n  public delete(id: string): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.delete(`${this.unitUrl2}/${id}`);\n  }\n\n  public update(id: string, unit: Unit): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.put(`${this.unitUrl2}/${id}`, unit);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UnitFormComponent } from './components/unit-form/unit-form.component';\nimport { UnitItemComponent } from './components/unit-item/unit-item.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\n\nconst routes: Routes = [\n  {\n    path: 'unitForm',\n    component: UnitFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'unit/:id',\n    component: UnitItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UnitRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UnitRoutingModule } from './unit-routing.module';\nimport { UnitListComponent } from './components/unit-list/unit-list.component';\nimport { UnitFormComponent } from './components/unit-form/unit-form.component';\nimport { UnitItemComponent } from './components/unit-item/unit-item.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [UnitListComponent, UnitFormComponent, UnitItemComponent],\n  imports: [CommonModule, UnitRoutingModule, SharedModule],\n})\nexport class UnitModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../model/user';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../../service/user.service';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css'],\n})\nexport class UserFormComponent implements OnInit {\n  user: User;\n  users: User[];\n  userForm = new FormGroup({\n    nom: new FormControl('', Validators.required),\n    prenom: new FormControl('', Validators.required),\n    cin: new FormControl('', Validators.nullValidator),\n    adresse: new FormControl('', Validators.nullValidator),\n    telephone: new FormControl('', Validators.nullValidator),\n    username: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.email, Validators.required]),\n    role: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n  });\n\n  get prenom() {\n    return this.userForm.get('prenom');\n  }\n\n  get nom() {\n    return this.userForm.get('nom');\n  }\n\n  get cin() {\n    return this.userForm.get('cin');\n  }\n\n  get adresse() {\n    return this.userForm.get('adresse');\n  }\n  get telephone() {\n    return this.userForm.get('telephone');\n  }\n\n  get username() {\n    return this.userForm.get('username');\n  }\n\n  get email() {\n    return this.userForm.get('email');\n  }\n  get role() {\n    return this.userForm.get('role');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    this.user = this.userForm.value;\n    console.log(this.user);\n    this.userService.save(this.user).subscribe((result) => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['/users']);\n  }\n\n  reset() {\n    this.userForm.reset();\n  }\n}\n","<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"bottomBorder\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile class=\"fullheight\">\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              value=\"Valider\"\n              [disabled]=\"!userForm.valid\"\n            >\n              Valider\n            </button>\n            <button mat-button class=\"blueButton\" (click)=\"reset()\">\n              Rénitialiser\n            </button>\n            <button mat-button class=\"blueButton\" routerLink=\"/users\">\n              Annuler\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"6:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom </mat-label>\n          <input matInput type=\"text\" formControlName=\"nom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Prenom </mat-label>\n          <input matInput type=\"text\" formControlName=\"prenom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>CIN</mat-label>\n          <input matInput type=\"text\" formControlName=\"cin\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Telephone</mat-label>\n          <input matInput type=\"text\" formControlName=\"telephone\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Username</mat-label>\n          <input matInput type=\"text\" formControlName=\"username\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Email</mat-label>\n          <input matInput type=\"text\" formControlName=\"email\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Role</mat-label>\n          <mat-select disableRipple formControlName=\"role\">\n            <mat-option value=\"Admin\">Administrateur</mat-option>\n            <mat-option value=\"User\">Utilisateur</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../../service/user.service';\nimport { User } from '../../model/user';\n\n@Component({\n  selector: 'app-user-item',\n  templateUrl: './user-item.component.html',\n  styleUrls: ['./user-item.component.css'],\n})\nexport class UserItemComponent implements OnInit {\n  user: User;\n  users: User[];\n  id: string;\n  userForm = new FormGroup({\n    nom: new FormControl('', Validators.required),\n    prenom: new FormControl('', Validators.required),\n    cin: new FormControl('', Validators.nullValidator),\n    adresse: new FormControl('', Validators.nullValidator),\n    telephone: new FormControl('', Validators.nullValidator),\n    username: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.email, Validators.required]),\n    role: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.nullValidator),\n  });\n\n  get prenom() {\n    return this.userForm.get('prenom');\n  }\n\n  get nom() {\n    return this.userForm.get('nom');\n  }\n\n  get cin() {\n    return this.userForm.get('cin');\n  }\n\n  get adresse() {\n    return this.userForm.get('adresse');\n  }\n  get telephone() {\n    return this.userForm.get('telephone');\n  }\n\n  get username() {\n    return this.userForm.get('username');\n  }\n\n  get email() {\n    return this.userForm.get('email');\n  }\n\n  get agence() {\n    return this.userForm.get('agence');\n  }\n  get password() {\n    return this.userForm.get('password');\n  }\n  get role() {\n    return this.userForm.get('role');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.userService.findUser(this.id).subscribe(\n      (data) => {\n        this.user = data[0];\n        this.adresse.setValue(this.user.adresse);\n        this.nom.setValue(this.user.nom);\n        this.telephone.setValue(this.user.telephone);\n        this.prenom.setValue(this.user.prenom);\n        this.email.setValue(this.user.email);\n        this.username.setValue(this.user.username);\n        this.cin.setValue(this.user.cin);\n        this.role.setValue(this.user.role);\n        this.password.setValue(this.user.password);\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  onSubmit() {\n    if (this.password.value == this.user.password) {\n      this.password.setValue(null);\n    }\n    this.user = this.userForm.value;\n\n    this.userService\n      .update(this.id, this.user)\n      .subscribe((result) => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['users']);\n  }\n\n  reset() {\n    this.userForm.reset(this.user);\n  }\n\n  goBack() {\n    this.router.navigate(['users']);\n  }\n}\n","<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"bottomBorder\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile class=\"fullheight\">\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              value=\"Valider\"\n              [disabled]=\"!userForm.valid\"\n            >\n              Modifier\n            </button>\n            <button mat-button class=\"blueButton\" (click)=\"reset()\">\n              Rénitialiser\n            </button>\n            <button mat-button class=\"blueButton\" routerLink=\"/users\">\n              Annuler\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"6:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom </mat-label>\n          <input matInput type=\"text\" formControlName=\"nom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Prenom </mat-label>\n          <input matInput type=\"text\" formControlName=\"prenom\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>CIN</mat-label>\n          <input matInput type=\"text\" formControlName=\"cin\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Telephone</mat-label>\n          <input matInput type=\"text\" formControlName=\"telephone\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Username</mat-label>\n          <input matInput type=\"text\" formControlName=\"username\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Email</mat-label>\n          <input matInput type=\"text\" formControlName=\"email\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Role</mat-label>\n          <input matInput type=\"text\" formControlName=\"role\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { User } from '../../model/user';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { UserService } from '../../service/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n})\nexport class UserListComponent implements OnInit {\n  users: User[];\n\n  dataSource = new MatTableDataSource<User>(this.users);\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = [\n    'id',\n    'username',\n    'nom',\n    'prenom',\n    'email',\n    'cin',\n    'adresse',\n    'telephone',\n    'role',\n    'actions',\n  ];\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(private userService: UserService, private route: Router) {}\n\n  deleteAgent(id: number) {\n    this.userService.delete(id).subscribe(\n      (data) => {\n        console.log(data);\n\n        this.userService.findAll().subscribe(\n          (data) => {\n            this.users = data;\n            this.dataSource = new MatTableDataSource<User>(this.users);\n            this.dataSource.paginator = this.paginator;\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<User>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit(): void {\n    this.userService.findAll().subscribe(\n      (data) => {\n        this.users = data;\n        this.dataSource = new MatTableDataSource<User>(this.users);\n        this.dataSource.paginator = this.paginator;\n      },\n      (error) => {\n        this.dataSource = new MatTableDataSource<User>(null);\n      }\n    );\n  }\n  goToUserItem(code: string) {\n    this.route.navigate(['/user/' + code]);\n  }\n}\n","<app-header></app-header>\n<div class=\"bottomBorder\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile class=\"fullheight\">\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/userForm\">\n            Ajouter\n          </button>\n        </div>\n      </mat-grid-tile>\n      <mat-grid-tile class=\"fullheight\">\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"nom\">\n      <th mat-header-cell *matHeaderCellDef>Nom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"prenom\">\n      <th mat-header-cell *matHeaderCellDef>Prenom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.prenom }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"cin\">\n      <th mat-header-cell *matHeaderCellDef>CIN</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.cin }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"adresse\">\n      <th mat-header-cell *matHeaderCellDef>Adresse</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.adresse }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"telephone\">\n      <th mat-header-cell *matHeaderCellDef>Telephone</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.telephone }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"username\">\n      <th mat-header-cell *matHeaderCellDef>Username</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.username }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef>Role</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.role }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" (click)=\"deleteAgent(element.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToUserItem(element.id)\"\n        >\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../model/user';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private userUrl: string;\n  constructor(private http: HttpClient) {\n    this.userUrl = 'http://localhost:8081/utilisateur';\n  }\n  public findAll(): Observable<User[]> {\n    return this.http.get<User[]>(this.userUrl + 's');\n  }\n\n  public save(user: User) {\n    return this.http.post<User>(this.userUrl, user);\n  }\n  delete(id: number): Observable<any> {\n    return this.http.delete(`${this.userUrl}/${id}`);\n  }\n  public findUser(id: string): Observable<User[]> {\n    return this.http.get<User[]>(this.userUrl + 's?id=' + id);\n  }\n  public update(id: string, user: User): Observable<any> {\n    let username = 'admin';\n    let password = 'admin';\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password),\n    });\n    return this.http.put(`${this.userUrl}/${id}`, user, { headers });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserFormComponent } from './components/user-form/user-form.component';\nimport { UserItemComponent } from './components/user-item/user-item.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\n\nconst routes: Routes = [\n  {\n    path: 'userForm',\n    component: UserFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n\n  {\n    path: 'user/:id',\n    component: UserItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { UserItemComponent } from './components/user-item/user-item.component';\nimport { UserFormComponent } from './components/user-form/user-form.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [UserListComponent, UserItemComponent, UserFormComponent],\n  imports: [CommonModule, UserRoutingModule, SharedModule],\n})\nexport class UserModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WarehouseService } from '../../service/warehouse.service';\nimport { Warehouse } from '../../model/warehouse';\n\n@Component({\n  selector: 'app-warehouse-form',\n  templateUrl: './warehouse-form.component.html',\n  styleUrls: ['./warehouse-form.component.css'],\n})\nexport class WarehouseFormComponent implements OnInit {\n  warehouseForm: FormGroup;\n  warehouse: Warehouse;\n\n  get id() {\n    return this.warehouseForm.get('id');\n  }\n  get nom() {\n    return this.warehouseForm.get('nom');\n  }\n  get adresse() {\n    return this.warehouseForm.get('adresse');\n  }\n\n  get designation() {\n    return this.warehouseForm.get('designation');\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private warehouseService: WarehouseService\n  ) {\n    this.warehouse = new Warehouse();\n  }\n  onSubmit() {\n    this.warehouse = this.warehouseForm.value;\n    this.warehouseService\n      .save(this.warehouse)\n      .subscribe((result) => this.gotoWarehouseList());\n  }\n\n  gotoWarehouseList() {\n    this.router.navigate(['/warehouses']);\n  }\n\n  ngOnInit(): void {\n    this.warehouseForm = new FormGroup({\n      adresse: new FormControl('', Validators.nullValidator),\n      designation: new FormControl('', Validators.required),\n    });\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"warehouseForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Emplacements / <span id=\"New\">Nouveau</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!warehouseForm.valid\"\n            >\n              AJOUTER\n            </button>\n            <button mat-button class=\"importer\" routerLink=\"/warehouses\">\n              ANNULER\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de l'emplacement</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WarehouseService } from '../../service/warehouse.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Warehouse } from '../../model/warehouse';\n\n@Component({\n  selector: 'app-warehouse-item',\n  templateUrl: './warehouse-item.component.html',\n  styleUrls: ['./warehouse-item.component.css'],\n})\nexport class WarehouseItemComponent implements OnInit {\n  codeId: string;\n  warehouseForm: FormGroup;\n  warehouse: Warehouse;\n  get designation() {\n    return this.warehouseForm.get('designation');\n  }\n\n  get adresse() {\n    return this.warehouseForm.get('adresse');\n  }\n  get description() {\n    return this.warehouseForm.get('description');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private warehouseService: WarehouseService\n  ) {\n    this.warehouse = new Warehouse();\n  }\n  ngOnInit(): void {\n    this.warehouseForm = new FormGroup({\n      designation: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.nullValidator),\n      adresse: new FormControl('', Validators.nullValidator),\n    });\n    this.codeId = this.route.snapshot.params['id'];\n    this.warehouseService.findWarehouse(this.codeId).subscribe(\n      (data) => {\n        this.warehouse = data[0];\n        console.log(this.warehouse);\n        this.designation.setValue(this.warehouse.designation);\n        this.adresse.setValue(this.warehouse.adresse);\n      },\n      (error) => console.log('error')\n    );\n  }\n\n  onSubmit() {\n    this.warehouse = this.warehouseForm.value;\n    this.warehouseService\n      .update(this.codeId, this.warehouse)\n      .subscribe((result) => this.gotoWarehouseList());\n  }\n\n  gotoWarehouseList() {\n    this.router.navigate(['/warehouses']);\n  }\n\n  reset() {\n    this.warehouseForm.reset(this.warehouse);\n  }\n}\n","<app-header></app-header>\n<form [formGroup]=\"warehouseForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"borderBottom\">\n    <div class=\"container\">\n      <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <h3>Emplacements / <span id=\"New\">Modifier</span></h3>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile> </mat-grid-tile>\n        <mat-grid-tile>\n          <div fxFlex fxLayoutAlign=\"start center\">\n            <button\n              mat-button\n              class=\"blueButton\"\n              type=\"submit\"\n              [disabled]=\"!warehouseForm.valid\"\n            >\n              Modifier\n            </button>\n\n            <button mat-button class=\"importer\" routerLink=\"/warehouses\">\n              Annuler\n            </button>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n\n  <div class=\"container content\">\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\">\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Nom de l'emplacement</mat-label>\n          <input matInput type=\"text\" formControlName=\"designation\" />\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field class=\"formField\">\n          <mat-label>Adresse</mat-label>\n          <input matInput type=\"text\" formControlName=\"adresse\" />\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { WarehouseService } from '../../service/warehouse.service';\nimport { Warehouse } from '../../model/warehouse';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-warehouse-list',\n  templateUrl: './warehouse-list.component.html',\n  styleUrls: ['./warehouse-list.component.css'],\n})\nexport class WarehouseListComponent implements OnInit {\n  warehouses: Warehouse[];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  displayedColumns: string[] = ['id', 'designation', 'adresse', 'actions'];\n  dataSource = new MatTableDataSource<Warehouse>(this.warehouses);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private warehouseService: WarehouseService,\n    private route: Router\n  ) {}\n  deleteWarehouse(id: string) {\n    this.warehouseService.delete(id).subscribe(\n      (data) => {\n        console.log(data);\n        this.warehouseService.findAll().subscribe(\n          (data) => {\n            this.warehouses = data;\n            this.dataSource = new MatTableDataSource<Warehouse>(\n              this.warehouses\n            );\n          },\n          (error) => {\n            this.dataSource = new MatTableDataSource<Warehouse>(null);\n          }\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n    this.warehouseService.findAll().subscribe(\n      (data) => {\n        this.warehouses = data;\n        this.dataSource = new MatTableDataSource<Warehouse>(this.warehouses);\n      },\n      (error) => {\n        console.log('tcalma');\n        this.dataSource = new MatTableDataSource<Warehouse>(null);\n      }\n    );\n  }\n  goToWarehouseItem(code: string) {\n    this.route.navigate(['/warehouse/' + code]);\n  }\n  goToStockForm(code: string) {\n    this.route.navigate(['/warehouse/' + code + '/stockForm']);\n  }\n}\n","<app-header></app-header>\n<div class=\"borderBottom\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\" rowHeight=\"16:1\">\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\"><h3>Emplacements</h3></div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Filtre</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" />\n          <span class=\"material-icons\" mat-button matSuffix mat-icon-button>\n            search\n          </span>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div fxFlex fxLayoutAlign=\"start center\">\n          <button mat-button class=\"blueButton\" routerLink=\"/warehouseForm\">\n            CREER\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"designation\">\n      <th mat-header-cell *matHeaderCellDef>Designation</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.designation }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"adresse\">\n      <th mat-header-cell *matHeaderCellDef>Adresse</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.adresse }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteWarehouse(element.id)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"goToWarehouseItem(element.id)\"\n        >\n          <mat-icon>update</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\n</div>\n","export class Warehouse {\n  id: number;\n\n  designation: string;\n  adresse: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Warehouse } from '../model/warehouse';\nimport { Observable } from 'rxjs';\nimport { Stock } from 'src/app/stock/model/stock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WarehouseService {\n  private warehouseUrl: string;\n  constructor(private http: HttpClient) {\n    this.warehouseUrl = 'http://localhost:8081/emplacement';\n  }\n  public findAll(): Observable<Warehouse[]> {\n    return this.http.get<Warehouse[]>(this.warehouseUrl + 's');\n  }\n  public findWarehouse(id: string): Observable<Warehouse[]> {\n    return this.http.get<Warehouse[]>(this.warehouseUrl + 's?id=' + id);\n  }\n  public findWarehousesWithoutStock(): Observable<Warehouse[]> {\n    return this.http.get<Warehouse[]>(this.warehouseUrl + 's/sansStock');\n  }\n  public findStock(id: string): Observable<Stock> {\n    console.log('WAREHOUSE SERVICE : ' + id);\n    return this.http.get<Stock>(this.warehouseUrl + '/' + id + '/stock');\n  }\n\n  public save(warehouse: Warehouse) {\n    return this.http.post<Warehouse>(this.warehouseUrl, warehouse);\n  }\n  public delete(id: string): Observable<any> {\n    return this.http.delete(`${this.warehouseUrl}/${id}`);\n  }\n\n  public update(id: string, warehouse: Warehouse): Observable<any> {\n    return this.http.put(`${this.warehouseUrl}/${id}`, warehouse);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WarehouseFormComponent } from './components/warehouse-form/warehouse-form.component';\nimport { WarehouseItemComponent } from './components/warehouse-item/warehouse-item.component';\nimport { AuthGaurdService } from '../authentification/services/auth-gaurd.service';\nimport { MouvementListComponent } from '../mouvement/components/mouvement-list/mouvement-list.component';\n\nconst routes: Routes = [\n  {\n    path: 'warehouseForm',\n    component: WarehouseFormComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'mouvements',\n    component: MouvementListComponent,\n    canActivate: [AuthGaurdService],\n  },\n  {\n    path: 'warehouse/:id',\n    component: WarehouseItemComponent,\n    canActivate: [AuthGaurdService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WarehouseRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WarehouseRoutingModule } from './warehouse-routing.module';\nimport { WarehouseItemComponent } from './components/warehouse-item/warehouse-item.component';\nimport { WarehouseFormComponent } from './components/warehouse-form/warehouse-form.component';\nimport { WarehouseListComponent } from './components/warehouse-list/warehouse-list.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    WarehouseItemComponent,\n    WarehouseFormComponent,\n    WarehouseListComponent,\n  ],\n  imports: [CommonModule, WarehouseRoutingModule, SharedModule],\n})\nexport class WarehouseModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}